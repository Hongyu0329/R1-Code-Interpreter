173[void main() {
    // Variable Declarations
    // Total memory = 158*1D (result) + 5*3D (others) = 173D.
    digit result[158]; // Array for 158 digits of 100!
    char num_digits;   // Current number of digits in result.
    char i, j;         // Loop counters.
    char carry;        // Carry-over for multiplication.
    char product;      // Holds intermediate product.

    // Initialize result to 1.
    result[0] = 1;
    num_digits = 1;

    // Multiply by i from 2 to 100.
    for (i = 2; i <= 100; i++) {
        carry = 0;
        for (j = 0; j < num_digits; j++) {
            product = result[j] * i + carry;
            result[j] = product % 10;
            carry = product / 10;
        }
        
        // Append remaining carry digits to the result.
        while (carry > 0) {
            result[num_digits] = carry % 10;
            num_digits++;
            carry = carry / 10;
        }
    }

    // Print the final number. Digits are stored in reverse order.
    j = num_digits;
    while (j > 0) {
        j--;
        printf("%d", result[j]);
    }
}]