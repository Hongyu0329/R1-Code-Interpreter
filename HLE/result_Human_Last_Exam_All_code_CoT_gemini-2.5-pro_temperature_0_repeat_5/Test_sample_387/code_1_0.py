import numpy as np

# The log structure is on a point P, given by the monoid Q = N^3.
# The generators of the associated group Z^3 are the standard basis vectors.
e1 = np.array([1, 0, 0])
e2 = np.array([0, 1, 0])
e3 = np.array([0, 0, 1])

# The log ideal I is generated by m1 = (1,0,0) and m2 = (0,1,0).
m1 = e1
m2 = e2

# The log blowup is covered by two affine charts.

# Chart 1: The monoid Q1 is generated by m1, e3, and m2-m1.
u1 = m1
u2 = m2 - m1
u3 = e3
matrix1 = np.array([u1, u2, u3])
dim1 = np.linalg.matrix_rank(matrix1)

print("Generators for the monoid of Chart 1:")
print(f"u1 = {u1}")
print(f"u2 = {u2}")
print(f"u3 = {u3}")
print(f"Dimension of Chart 1 = rank(matrix([u1, u2, u3])) = {dim1}\n")


# Chart 2: The monoid Q2 is generated by m2, e3, and m1-m2.
v1 = m2
v2 = m1 - m2
v3 = e3
matrix2 = np.array([v1, v2, v3])
dim2 = np.linalg.matrix_rank(matrix2)

print("Generators for the monoid of Chart 2:")
print(f"v1 = {v1}")
print(f"v2 = {v2}")
print(f"v3 = {v3}")
print(f"Dimension of Chart 2 = rank(matrix([v1, v2, v3])) = {dim2}\n")


# The dimension of the log blowup is the maximum dimension of its charts.
blowup_dimension = max(dim1, dim2)
print(f"The dimension of the log blowup is the maximum of the chart dimensions.")
print(f"Dimension = max({dim1}, {dim2}) = {blowup_dimension}")
