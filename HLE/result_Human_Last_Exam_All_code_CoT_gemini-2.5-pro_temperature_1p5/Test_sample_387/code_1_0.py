import numpy as np

# Step 1: Define the geometric setup based on the problem description.
# The log structure from the monoid N^3 on a point corresponds to the cone sigma in R^3
# generated by the standard basis vectors. The associated variety is affine 3-space.
print("Step 1: Define the initial cone.")
e1 = np.array([1, 0, 0])
e2 = np.array([0, 1, 0])
e3 = np.array([0, 0, 1])
initial_cone_generators = np.array([e1, e2, e3])
initial_dim = np.linalg.matrix_rank(initial_cone_generators)
print(f"The initial space has generators e1={e1}, e2={e2}, e3={e3}.")
print(f"Its dimension is {initial_dim}.\n")

# Step 2: Define the log ideal and the new vector for the blowup.
# The log ideal generated by (1,0,0) and (0,1,0) means we introduce a new ray
# for the blowup, corresponding to the vector v = e1 + e2.
print("Step 2: Define the new vector for the blowup.")
v = e1 + e2
print(f"The ideal is generated by e1 and e2. The new vector v is their sum.")
print(f"v = e1 + e2 => {v} = {e1} + {e2}\n")

# Step 3: Define the new cones from the subdivision.
# The original cone is subdivided into two new cones, sigma1 and sigma2.
# sigma1 is generated by e1, v, and e3.
# sigma2 is generated by e2, v, and e3.
print("Step 3: Define the new cones after subdivision.")
cone1_generators = np.array([e1, v, e3])
cone2_generators = np.array([e2, v, e3])
print("The new cones have the following generators:")
print("Cone 1 generators (rows):")
print(cone1_generators)
print("Cone 2 generators (rows):")
print(cone2_generators)
print()

# Step 4: Calculate the dimension of the new cones.
# The dimension of the blowup is the maximum dimension of the new cones.
# The dimension of a cone is the rank of the matrix of its generators.
print("Step 4: Calculate the dimension of the new cones.")
dim1 = np.linalg.matrix_rank(cone1_generators)
dim2 = np.linalg.matrix_rank(cone2_generators)
print(f"The dimension of the first new cone is its matrix rank: {dim1}")
print(f"The dimension of the second new cone is its matrix rank: {dim2}\n")

# The dimension of the blowup is the dimension of the covering charts.
final_dimension = max(dim1, dim2)
print("The dimension of the log blowup is the maximum dimension of the new cones.")
print(f"Final Dimension = {final_dimension}")