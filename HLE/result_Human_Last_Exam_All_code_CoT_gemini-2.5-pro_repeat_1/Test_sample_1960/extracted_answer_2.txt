**Function f:**
Let `A`, `B` be two distinct literal-free formulas. The function `f` maps a natural number `n` to the linear logic formula:
`f(n) := B ⊸ (B ⊗ A^n)`
where `A^n` denotes the tensor product `A ⊗ A ⊗ ... ⊗ A` for `n` times (`A^0 = 1`).

**Formula C:**
Let `A`, `B`, `K` be three distinct literal-free formulas. The formula `C` for parameters `m` and `b` is:
`C(W, m, b) := (B^m ⊗ ((B ⊗ A^b) ⊸ K)^m) ⊸ K^m`

**Literal-Free Instantiation:**
To ensure the formulas contain no literals, `A`, `B`, and `K` can be constructed from the constants `1` and `⊥`. A valid choice that makes them orthogonal is:
*   `A := 1 ⊸ ⊥`
*   `B := (1 ⊸ ⊥) ⊸ (1 ⊸ ⊥)`
*   `K := ((1 ⊸ ⊥) ⊸ (1 ⊸ ⊥)) ⊸ (1 ⊸ ⊥)`