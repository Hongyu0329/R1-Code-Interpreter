from sympy import symbols, Poly, factor, galois_group
from sympy.combinatorics.named_groups import QuaternionGroup, DihedralGroup, AlternatingGroup, SymmetricGroup, CyclicGroup

def solve_galois_group():
    """
    This function finds the Galois group of the extension L/Q.
    L is generated by a root of the polynomial P(x).
    """
    x = symbols('x')
    
    # The minimal polynomial of the generator alpha over Q is
    # P(x) = x^8 - 24x^6 + 144x^4 - 288x^2 + 144
    # Let's define this polynomial.
    coeffs = [1, 0, -24, 0, 144, 0, -288, 0, 144]
    p = Poly(coeffs, x)

    print(f"The polynomial is P(x) = {p.as_expr()}")

    # Step 1: Check if the polynomial is irreducible over Q.
    # The factor function will return the polynomial itself if it is irreducible.
    factors = factor(p)
    print(f"Factoring the polynomial over Q gives: {factors}")
    if factors == p:
        print("The polynomial is irreducible, as expected.")
    else:
        print("The polynomial is reducible, something is wrong in the derivation.")
        return

    # Step 2: Compute the Galois group of the polynomial.
    # The splitting field of this polynomial is the field L.
    # Note: galois_group can be computationally intensive.
    try:
        G = galois_group(p)
        print(f"The Galois group G has been computed.")
    except Exception as e:
        print(f"Could not compute the Galois group: {e}")
        return

    # Step 3: Identify the group.
    # We know the order is 8. Let's verify.
    order = G.order()
    print(f"The order of the group is {order}.")

    if order != 8:
        print("The group order is not 8, something is wrong.")
        return

    # Check against known groups of order 8.
    is_abelian = G.is_abelian()
    print(f"Is the group abelian? {is_abelian}")

    # Possible non-abelian groups of order 8 are D_4 and Q_8.
    if not is_abelian:
        if G.is_isomorphic(QuaternionGroup()):
            group_name = "Quaternion group (Q_8)"
        elif G.is_isomorphic(DihedralGroup(4)):
            group_name = "Dihedral group (D_4)"
        else:
            group_name = "An unknown non-abelian group of order 8"
    else: # Possible abelian groups of order 8
        if G.is_isomorphic(CyclicGroup(8)):
            group_name = "Cyclic group (C_8)"
        elif G.is_isomorphic(CyclicGroup(4).direct_product(CyclicGroup(2))):
             group_name = "C_4 x C_2"
        elif G.is_isomorphic(CyclicGroup(2).direct_product(CyclicGroup(2)).direct_product(CyclicGroup(2))):
            group_name = "C_2 x C_2 x C_2"
        else:
            group_name = "An unknown abelian group of order 8"

    print(f"\nThe Galois group of L/Q is the {group_name}.")

solve_galois_group()