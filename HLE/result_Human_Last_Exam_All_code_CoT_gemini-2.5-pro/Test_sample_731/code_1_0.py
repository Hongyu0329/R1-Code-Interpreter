import math

def count_power_subgroups_semidihedral(group_order):
    """
    Calculates the number of power subgroups (cyclic subgroups) in a semidihedral group.
    """
    # Step 1: Find n for the semidihedral group SD_2^n, where order = 2^n.
    if group_order <= 1 or (group_order & (group_order - 1)) != 0:
        print(f"Error: The group order must be a power of 2 greater than 1.")
        return

    n = int(math.log2(group_order))
    
    print(f"For the semidihedral group of order {group_order}, we have n = {n}.")
    print("The number of power subgroups is the number of distinct cyclic subgroups.")
    print("We can find this by summing the number of cyclic subgroups of three distinct types.")
    print("-" * 20)

    # Step 2: Calculate the number of cyclic subgroups contained within the maximal cyclic subgroup <r>.
    # The number of subgroups of a cyclic group of order 2^(n-1) is n.
    subgroups_from_r = n
    print(f"1. Cyclic subgroups contained within the maximal cyclic subgroup <r> (order {2**(n-1)}): {subgroups_from_r}")

    # Step 3: Calculate the number of cyclic subgroups generated by elements of the form sr^i where i is even.
    # These elements (2^(n-2) of them) have order 2 and each generates a unique subgroup.
    subgroups_from_sr_even = 2**(n - 2)
    print(f"2. Cyclic subgroups of order 2 generated by elements of the form sr^i (i is even): {subgroups_from_sr_even}")

    # Step 4: Calculate the number of cyclic subgroups generated by elements of the form sr^i where i is odd.
    # These elements (2^(n-2) of them) have order 4. They form 2^(n-3) distinct subgroups.
    subgroups_from_sr_odd = 2**(n - 3)
    print(f"3. Cyclic subgroups of order 4 generated by elements of the form sr^i (i is odd): {subgroups_from_sr_odd}")
    print("-" * 20)

    # Step 5: Sum the counts to get the total number of power subgroups.
    total_subgroups = subgroups_from_r + subgroups_from_sr_even + subgroups_from_sr_odd
    
    print("The total number of power subgroups is the sum of these counts.")
    print(f"Total = {subgroups_from_r} + {subgroups_from_sr_even} + {subgroups_from_sr_odd} = {total_subgroups}")

# Run the calculation for the semidihedral group of size 512.
count_power_subgroups_semidihedral(512)