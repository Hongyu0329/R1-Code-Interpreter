```python
import sympy

def derive_effective_interaction():
    """
    This function symbolically derives and prints the effective 
    electron-electron interaction potential mediated by phonons.
    """
    # 1. Define the symbolic variables for the equation.
    g = sympy.Symbol('g', real=True, positive=True)             # electron-phonon coupling constant
    m = sympy.Symbol('m', real=True, positive=True)             # mass of the particle (in the coupling)
    w_q = sympy.Symbol('w_q', real=True, positive=True)         # phonon frequency for mode q
    omega_n = sympy.Symbol('omega_n', real=True)                # Bosonic Matsubara frequency
    q_norm_sq = sympy.Symbol('|q|^2', real=True, positive=True) # squared norm of the momentum vector q
    
    # The user asks not to sum over q, so we treat q as a fixed parameter.
    
    print("The effective electron-electron interaction potential V_eff(q, omega_n) is a product of two parts:")
    print("-" * 70)

    # 2. Construct the first part of the potential.
    # This part comes from the coupling constants and electron density.
    # The term is -g^2 * |q|^2 / m
    coupling_part_numerator = -g**2 * q_norm_sq
    coupling_part = coupling_part_numerator / m
    
    print("Part 1: The coupling and momentum dependent term.")
    print("This term arises from the square of the interaction vertex M_q ~ g*q/sqrt(m):")
    sympy.pprint(coupling_part)
    print("-" * 70)
    
    # 3. Construct the second part of the potential.
    # This is the phonon propagator D(q, omega_n).
    # The term is 1 / (omega_n^2 + w_q^2)
    propagator_part_denominator = omega_n**2 + w_q**2
    propagator_part = 1 / propagator_part_denominator

    print("Part 2: The phonon propagator D(q, omega_n).")
    print("This term describes the dynamics of the virtual phonon being exchanged:")
    sympy.pprint(propagator_part)
    print("-" * 70)

    # 4. Assemble the full effective potential V_eff.
    V_eff = coupling_part * propagator_part

    print("Final Result: The full effective interaction potential V_eff(q, omega_n).")
    print("This is obtained by multiplying the two parts together:")
    sympy.pprint(V_eff)
    print("\nThis potential is attractive (V_eff < 0) and describes how two electrons interact by exchanging a virtual phonon with momentum q and energy corresponding to the Matsubara frequency omega_n.")

if __name__ == '__main__':
    derive_effective_interaction()
```