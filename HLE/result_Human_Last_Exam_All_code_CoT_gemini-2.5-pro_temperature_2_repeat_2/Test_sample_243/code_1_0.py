def analyze_mercury_observation():
    """
    Analyzes the visibility of Mercury's sodium tail based on
    observational parameters.
    """

    # 1. Define the physical and observational parameters.
    # The prominent emission lines of neutral sodium (Na I D-lines) are at ~589 nm.
    sodium_emission_wavelength_nm = 589.0

    # The telescope uses a filter centered at 486 nm.
    filter_center_wavelength_nm = 486.0

    # The filter has a bandpass width of 1 nm.
    filter_bandpass_nm = 1.0

    # 2. Calculate the filter's range.
    filter_min_nm = filter_center_wavelength_nm - (filter_bandpass_nm / 2)
    filter_max_nm = filter_center_wavelength_nm + (filter_bandpass_nm / 2)

    # 3. Determine if the sodium emission is visible through the filter.
    is_visible = filter_min_nm <= sodium_emission_wavelength_nm <= filter_max_nm

    print("Step 1: Analyzing Visibility")
    print(f"The sodium tail emits light primarily at {sodium_emission_wavelength_nm} nm.")
    print(f"The telescope's filter only allows light between {filter_min_nm:.1f} nm and {filter_max_nm:.1f} nm to pass through.")

    if is_visible:
        print("\nConclusion: The sodium emission IS within the filter's range.")
    else:
        print(f"\nConclusion: The sodium emission at {sodium_emission_wavelength_nm} nm is NOT within the filter's range.")
        print("Therefore, the sodium tail would not be visible through this filter.")

    print("\nStep 2: Analyzing Tail Length (General Knowledge)")
    print("Mercury's tail is generated by solar radiation pressure.")
    print(" - At perihelion (closest to the Sun), solar pressure is strongest, creating a LONGER tail.")
    print(" - At aphelion (farthest from the Sun), solar pressure is weakest, creating a SHORTER tail.")

    print("\nFinal Synthesis:")
    print("Because the filter is tuned to 486 nm, it will completely block the yellow light from the sodium tail at 589 nm.")
    print("Regardless of whether Mercury is at aphelion or perihelion, no tail would be visible with this specific instrument setup.")


analyze_mercury_observation()