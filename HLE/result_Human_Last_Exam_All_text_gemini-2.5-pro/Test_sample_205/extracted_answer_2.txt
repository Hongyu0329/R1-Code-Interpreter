170[
int main() {
    // Variable declarations. Total memory usage is 170D.
    // result: 158*1D=158D, num_digits/i/j/carry: 4*3D=12D.

    // Array to store digits of 100! in reverse order.
    digit result[158];
    // Tracks the current number of digits in the result.
    char num_digits;
    // Loop counter for multiplication (from 2 to 100).
    char i;
    // Loop counter for iterating through the result's digits.
    char j;
    // Holds the carry-over during the multiplication.
    char carry;

    // Initialize the result to the value 1.
    result[0] = 1;
    num_digits = 1;

    // Main calculation loop: result = result * i, for i from 2 to 100.
    for (i = 2; i <= 100; i++) {
        carry = 0;
        // Multiply each digit of the current number by i.
        for (j = 0; j < num_digits; j++) {
            // Add product to carry, update digit, and calculate new carry.
            carry += result[j] * i;
            result[j] = carry % 10;
            carry /= 10;
        }

        // If carry remains, append its digits to the end of the number.
        while (carry > 0) {
            result[num_digits] = carry % 10;
            num_digits++;
            carry /= 10;
        }
    }

    // Print the final result.
    // Since digits are stored in reverse, we print from the last digit.
    // This loop is constructed to work correctly with an unsigned counter.
    i = num_digits;
    while (i > 0) {
        i--;
        printf("%d", result[i]);
    }
    printf("\n");

    return 0;
}
]