import numpy as np

# Step 1: Define the geometry of the original space P
# The log structure N^3 corresponds to a cone generated by the standard basis vectors in R^3.
e1 = np.array([1, 0, 0])
e2 = np.array([0, 1, 0])
e3 = np.array([0, 0, 1])

# The dimension of the original space is the rank of the matrix formed by these vectors.
original_space_generators = np.array([e1, e2, e3])
original_dim = np.linalg.matrix_rank(original_space_generators)

print(f"The original space P corresponds to a cone generated by vectors:")
print(f"e1 = {e1}")
print(f"e2 = {e2}")
print(f"e3 = {e3}")
print(f"The dimension of P is the rank of the matrix of these vectors, which is {original_dim}.\n")

# Step 2: Define the log ideal I and the corresponding blowup operation
# The ideal I is generated by v1 = (1,0,0) and v2 = (0,1,0).
v1 = e1
v2 = e2

# The log blowup introduces a new ray 'w', which is the sum of the ideal's generators.
w = v1 + v2

print(f"The log ideal I is generated by e1 and e2.")
print(f"The log blowup introduces a new vector w = e1 + e2.")
print(f"w = {v1} + {v2} = {w}\n")


# Step 3: Define the new cones in the fan of the blowup
# The original cone is subdivided into two new cones.
# Cone 1 is generated by w, e2, and e3.
cone1_generators = np.array([w, e2, e3])
# Cone 2 is generated by w, e1, and e3.
cone2_generators = np.array([w, e1, e3])

# Step 4: Calculate the dimension of the new cones and the final dimension
# The dimension of a cone is the rank of the matrix of its generators.
dim_cone1 = np.linalg.matrix_rank(cone1_generators)
dim_cone2 = np.linalg.matrix_rank(cone2_generators)

# The dimension of the blowup is the maximum of the dimensions of the new cones.
final_dimension = max(dim_cone1, dim_cone2)

print("The first new cone is generated by w, e2, e3.")
print(f"Its dimension is rank([w, e2, e3]) = {dim_cone1}")
print("\nThe second new cone is generated by w, e1, e3.")
print(f"Its dimension is rank([w, e1, e3]) = {dim_cone2}\n")


print("The dimension of the log blowup is the maximum dimension of the cones in the new fan.")
print(f"Final Dimension = max({dim_cone1}, {dim_cone2}) = {final_dimension}")
<<<3>>>