170[
void main() {
    /*
     * This program calculates 100! using an array of digits to handle
     * the large result, optimized for WXVM's specific data types to
     * use the minimum amount of variable memory.
     *
     * Memory Usage Analysis:
     * - result[158]: An array to hold the 158 digits of 100!.
     *   158 * sizeof(digit) = 158 * 1D = 158D
     * - i, j, digits, temp: Control and calculation variables. The value
     *   for some (i, j, digits) exceeds 99, and the temp product exceeds
     *   99. The next smallest type, char (0-999), is required for all.
     *   4 * sizeof(char) = 4 * 3D = 12D
     *
     * Total memory (z) = 158D + 12D = 170D.
     */
    digit result[158];
    char i, j, digits, temp;

    // Initialize the number to 1 (for 1!)
    digits = 1;
    result[0] = 1;

    // Calculate factorial by multiplying with i from 2 to 100
    for (i = 2; i <= 100; i++) {
        // temp holds the carry from the previous digit's calculation
        temp = 0;
        for (j = 0; j < digits; j++) {
            // Calculate product for the current digit place and add carry
            temp += result[j] * i;
            // The new digit is the remainder of the product
            result[j] = temp % 10;
            // The new carry is the rest of the product
            temp = temp / 10;
        }

        // After multiplying all existing digits, if a carry remains,
        // it forms new, more significant digits of the number.
        while (temp > 0) {
            result[digits] = temp % 10;
            temp = temp / 10;
            digits++;
        }
    }

    // Print the final result.
    // We print from the last digit (most significant) backwards.
    printf("100! = ");
    while (digits > 0) {
        digits--;
        printf("%d", result[digits]);
    }
    printf("\n");
}
]