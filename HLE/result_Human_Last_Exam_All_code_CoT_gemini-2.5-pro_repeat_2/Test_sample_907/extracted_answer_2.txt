```python
import math

def display_absorption_equations():
    """
    This script explains and prints the equations for the absorption cross-section
    of a molecular chain interacting with an ultrashort Gaussian laser pulse,
    based on first-order time-dependent perturbation theory.
    """

    print("="*70)
    print("Absorption Cross-Section for a Molecular Chain")
    print("="*70)
    print("The general formula for the total absorption cross-section (σ) from a pulse")
    print("as a function of the laser's central frequency (ω_L) is:")
    print("σ(ω_L) = C * Σ_f [ ω_f * |d_f|² * exp(-(ω_f - ω_L)² * τ²) ]")
    print("where the sum is over all possible final states 'f'.\n")


    # --- Case a) No interaction between molecules ---
    print("-" * 70)
    print("a) Case with NO interaction between molecules")
    print("-" * 70)
    print("In this case, the N molecules are independent. The total absorption is the")
    print("sum of N identical, single-molecule absorptions. All transitions share")
    print("the same frequency ω₀ and transition dipole moment μ.")
    
    print("\nThe final equation for the absorption cross-section is:")
    print("\n  σ_a(ω_L) = (N) * (C) * (ω₀) * (|μ·ε̂|²) * (exp[-(ω₀ - ω_L)²τ²])\n")

    print("Each term in the final equation represents:")
    print("  N          : The number of molecules in the chain.")
    print("  C          : A factor from physical constants and pulse properties:")
    print("               C = 2*sqrt(π)*τ / (c*ε₀*ħ)")
    print("  ω₀         : The resonance frequency of an isolated molecule.")
    print("  |μ·ε̂|²      : The squared transition dipole moment projected on the laser")
    print("               polarization axis (ε̂). This determines the light-matter")
    print("               coupling strength for one molecule.")
    print("  exp[...]   : A Gaussian lineshape function centered at ω₀. Its width is")
    print("               inversely proportional to the pulse duration τ.")

    print("\n--- List of Symbols ---")
    print("  ħ: Reduced Planck Constant")
    print("  c: Speed of light")
    print("  ε₀: Vacuum permittivity")
    print("  τ: Gaussian pulse duration (temporal standard deviation)")
    print("\n")


    # --- Case b) Near-neighbor interaction ---
    print("-" * 70)
    print("b) Case with near-neighbor interaction (Frenkel Exciton Model)")
    print("-" * 70)
    print("Here, intermolecular coupling (J) creates delocalized exciton states.")
    print("For a chain with parallel dipoles, the transition strength is coherently")
    print("concentrated into the lowest-energy exciton state (k=1 for open chain,")
    print("k=0 for ring). This results in a phenomenon called superradiance.")

    print("\nThe final equation for the absorption cross-section is:")
    print("\n  σ_b(ω_L) = (N) * (C) * (ω_exc) * (|μ·ε̂|²) * (exp[-(ω_exc - ω_L)²τ²])\n")

    print("The equation is similar in form, but the transition frequency is now")
    print("the exciton frequency (ω_exc), which depends on the coupling J:")
    print("  ω_exc = ω₀ + 2J/ħ   (for the main absorption peak)\n")
    
    print("Each term in the final equation represents:")
    print("  N          : A cooperative enhancement factor. The total transition strength")
    print("               is N times that of a single molecule and is focused into one")
    print("               transition.")
    print("  C          : The same constant factor as in case (a).")
    print("  ω_exc      : The frequency of the optically active exciton state, shifted")
    print("               from the single-molecule frequency ω₀ by the coupling J.")
    print("  |μ·ε̂|²      : The intrinsic transition strength of a single molecule.")
    print("  exp[...]   : A Gaussian lineshape, now centered at the exciton frequency ω_exc.")

    print("\n--- Additional Symbol ---")
    print("  J: Near-neighbor coupling energy (can be positive or negative)")
    print("="*70)

if __name__ == '__main__':
    display_absorption_equations()
```