171[void main() {
    // Array to store the 158 digits of 100! in reverse order (LSB first).
    // Initialized to 1. Size: 158 * sizeof(digit) = 158D.
    digit result[158] = {1};

    // Tracks the current number of digits in the result array.
    // Max value will be 158. Size: sizeof(char) = 3D.
    char num_digits = 1;

    // Loop counter for multiplying from 2 up to 100.
    // Size: sizeof(char) = 3D.
    char i;

    // Loop counter for iterating through the digits of the result.
    // Must be a signed type for the countdown print loop to terminate correctly.
    // Size: sizeof(int) = 4D.
    int j;

    // Variable to hold the intermediate product and then the carry-over.
    // Max value is (9 * 100 + 99) = 999. Size: sizeof(char) = 3D.
    char carry;

    // Main calculation loop: multiply the number in 'result' by i.
    for (i = 2; i <= 100; i++) {
        carry = 0;
        for (j = 0; j < num_digits; j++) {
            // Perform one step of long multiplication.
            carry = result[j] * i + carry;
            result[j] = carry % 10;
            carry = carry / 10;
        }

        // If a carry remains, append its digits to the result array.
        while (carry > 0) {
            result[num_digits] = carry % 10;
            num_digits++;
            carry = carry / 10;
        }
    }

    // Print the final number.
    // Digits are stored in reverse, so we print backwards.
    printf("100! = ");
    for (j = num_digits - 1; j >= 0; j--) {
        printf("%d", result[j]);
    }
    printf("\n");
}]