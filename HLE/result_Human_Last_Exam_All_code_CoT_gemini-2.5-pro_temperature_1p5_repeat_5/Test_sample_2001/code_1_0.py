import numpy as np

def simulate_sensor_response(bias_field, particle_field, sensor_saturation_field):
    """
    Simulates the Spin Valve sensor's response to a particle's magnetic field
    under a given bias field. The sensor saturates if the total field
    exceeds its saturation limit.

    Args:
        bias_field (float): The background magnetic field from the permanent magnet.
        particle_field (float): The small magnetic field from a single particle.
        sensor_saturation_field (float): The magnetic field at which the sensor saturates.
    """
    
    # Sensor output is proportional to the field, but capped at saturation.
    def get_output(field, saturation_field):
        # We use np.clip to simulate saturation. The output cannot exceed the saturation value.
        return np.clip(field, -saturation_field, saturation_field)

    # 1. Calculate the field at the sensor without any particle present
    field_without_particle = bias_field
    output_without_particle = get_output(field_without_particle, sensor_saturation_field)

    # 2. Calculate the total field when a particle passes by
    field_with_particle = bias_field + particle_field
    output_with_particle = get_output(field_with_particle, sensor_saturation_field)
    
    # 3. Calculate the detected signal change
    detected_signal = output_with_particle - output_without_particle
    
    print(f"Bias Field: {bias_field:.2f}")
    print(f"  - Sensor Output (no particle): {output_without_particle:.4f}")
    print(f"  - Sensor Output (with particle): {output_with_particle:.4f}")
    if detected_signal > 1e-9: # Check for a non-negligible signal
        print(f"  - Detected Signal Change: {detected_signal:.4f} -> Particle DETECTED")
    else:
        print(f"  - Detected Signal Change: {detected_signal:.4f} -> Particle NOT DETECTED")
    print("-" * 30)

# --- System Parameters (arbitrary units) ---
# The magnetic field generated by a single magnetized particle
particle_field = 0.5 

# The Spin Valve sensor saturates if the field exceeds this value
sensor_saturation_field = 10.0

# --- Scenarios ---

# Scenario 1: Correctly positioned magnet
# The bias field is strong enough to magnetize particles but well within the sensor's operating range.
correct_bias_field = 5.0
print("--- SCENARIO 1: CORRECT Magnet Position ---")
simulate_sensor_response(correct_bias_field, particle_field, sensor_saturation_field)

# Scenario 2: Improperly positioned magnet (too close)
# The bias field is too strong and pushes the sensor to its saturation limit.
improper_bias_field = 10.0
print("--- SCENARIO 2: IMPROPER Magnet Position (Saturated) ---")
simulate_sensor_response(improper_bias_field, particle_field, sensor_saturation_field)