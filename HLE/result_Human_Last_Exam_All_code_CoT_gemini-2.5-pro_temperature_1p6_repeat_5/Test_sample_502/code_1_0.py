import math

def solve_invariant_theory_problem():
    """
    Solves the problem by applying a key theorem from invariant theory.
    """
    
    # The order of the abstract group G.
    order_G = 10000
    
    # The dimension of the space C^n on which G acts. The polynomial ring is C[x_1, ..., x_n].
    n = 10

    print("Problem analysis:")
    print("1. R is the polynomial ring C[x_1, ..., x_10].")
    print(f"2. G is a group of order {order_G} acting on C^10.")
    print("3. I is the ideal generated by positive-degree homogeneous G-invariant polynomials.")
    print("4. We want to find the maximum possible dimension of the coinvariant algebra R/I.")
    print("-" * 20)
    
    print("Theoretical background:")
    print("A theorem by Chevalley, Shephard, Todd, and others states that for a finite group H acting on C^n,")
    print("the dimension of the coinvariant algebra is equal to the order of the acting group H, i.e., dim(R/I) = |H|.")
    print("-" * 20)
    
    print("Applying the theorem:")
    print("The action of G on C^10 is defined by a representation rho: G -> GL_10(C).")
    print("The actual group acting on C^10 is the image H = rho(G).")
    print("The dimension of R/I is |H| = |rho(G)|.")
    print("By the first isomorphism theorem, |rho(G)| = |G| / |ker(rho)|.")
    print("-" * 20)
    
    print("Maximizing the dimension:")
    print(f"The dimension is {order_G} / |ker(rho)|.")
    print("To maximize this value, we must minimize the order of the kernel, |ker(rho)|.")
    print("The minimum possible order of a kernel is 1 (for a faithful representation).")
    
    min_kernel_order = 1
    
    print(f"So, the maximum possible dimension is {order_G} / {min_kernel_order}.")
    print("-" * 20)
    
    print("Verification of existence:")
    print("A group of order 10000 (e.g., the cyclic group C_10000) admits a faithful representation")
    print("in GL_10(C). For instance, mapping a generator to diag(exp(2*pi*i/10000), 1, ..., 1).")
    print("Therefore, a dimension of 10000 is achievable.")
    print("-" * 20)
    
    # Final calculation
    largest_dimension = order_G / min_kernel_order
    
    print("Final equation:")
    print(f"Largest Dimension = Order of G / Minimum Kernel Order")
    print(f"Largest Dimension = {order_G} / {min_kernel_order}")
    print(f"Result: {int(largest_dimension)}")

    return int(largest_dimension)

# Execute the function to find the answer.
final_answer = solve_invariant_theory_problem()

# The final answer required by the user prompt
# print(f"<<<{final_answer}>>>")