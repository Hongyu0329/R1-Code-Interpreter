### Filtering Strategy for Cancer Gene Contamination

Here is a step-by-step strategy to eliminate cancer gene contamination from your RNA-seq data, which can be implemented using command-line tools and R scripts.

#### **Part 1: Identifying Contaminant Genes (The "Contamination Signature")**

This initial step is crucial for building a reliable filter. It requires you to have, or to generate, RNA-seq data from your cancer cell line cultured in isolation.

**1. Create a Reference Count Matrix**
First, combine the raw gene counts from your "pure" cancer cell line samples and your "pure" (pre-co-culture) CAR T-cell samples into a single count matrix. This is a simple table with genes as rows and samples as columns.

**2. Prepare an R Script for Differential Expression**
You will use a tool like DESeq2, which is an R package, to find genes that are massively over-expressed in the cancer cells compared to the T cells. Save the following code as an R script (e.g., `find_contaminants.R`).

```R
# Load the DESeq2 library
library(DESeq2)

# --- Command Line Arguments ---
args <- commandArgs(trailingOnly=TRUE)
counts_file <- args[1] # Path to your reference count matrix
metadata_file <- args[2] # Path to your metadata file
output_file <- args[3] # Filename for the contaminant gene list

# --- Load Data ---
countData <- read.csv(counts_file, header=TRUE, row.names=1)
metaData <- read.csv(metadata_file, header=TRUE, row.names=1)

# --- Create DESeq2 Object ---
# The design formula '~ condition' tells DESeq2 to compare samples based on the 'condition' column in your metadata
dds <- DESeqDataSetFromMatrix(countData = countData,
                              colData = metaData,
                              design = ~ condition)

# --- Run DESeq2 Analysis ---
dds <- DESeq(dds)
res <- results(dds, contrast=c("condition", "Cancer_Pure", "Tcell_Pure"))

# --- Define Contaminants Based on Log2 Fold Change ---
# Set a very strict threshold to isolate true contaminants.
# A log2 fold change of >8 means a 256-fold higher expression in cancer cells.
# An adjusted p-value (padj) < 0.01 ensures the difference is statistically significant.
contaminants <- subset(res, log2FoldChange > 8 & padj < 0.01)

# --- Save the List of Contaminating Gene IDs ---
write.table(rownames(contaminants), file=output_file, row.names=FALSE, col.names=FALSE, quote=FALSE)

```

**3. Execute from the Command Line**
Run the R script from your terminal. This will generate a plain text file containing the list of contaminant gene IDs.

```bash
Rscript find_contaminants.R reference_counts.csv reference_metadata.csv contaminant_genes.txt
```

#### **Part 2: Filtering Your Experimental Data and Final Analysis**

Now you will use the generated gene list to clean your primary experimental data.

**1. Filter the Experimental Count Matrix**
You can use a simple `grep` command to remove the contaminant genes from your main experimental count matrix (the one containing your 8 samples: 4 CAR T and 4 CAR T-IL15). This command inverts the match (`-v`), using the gene list from the file (`-f`) to exclude every matching gene.

```bash
grep -v -f contaminant_genes.txt main_experimental_counts.csv > filtered_experimental_counts.csv
```
This creates a new, clean count matrix ready for your actual analysis.

**2. Perform the Final Differential Expression Analysis**
With the clean data, you can now confidently perform the differential expression analysis between the CAR T cells and the CAR T-IL15 cells. You would use another DESeq2 script, similar to the one above, but with your filtered data and experimental metadata. The key contrast of interest would be between the "CAR_T_IL15" and "CAR_T_only" conditions. This will reveal the true transcriptional differences between your two engineered cell types, free from the skew of the cancer cell contamination.

### **Alternative Strategy (If No "Pure" Cancer Profile is Available)**

If you do not have RNA-seq data from the cancer line alone, you can use an alternative, though less direct, method. This approach assumes that the contamination is primarily in your "CAR T only" group and absent or negligible in the "CAR T-IL15" group.

1.  **Run a Preliminary Analysis:** Perform a standard differential expression analysis on your *unfiltered* experimental data, comparing the CAR T-IL15 group to the CAR T only group.
2.  **Identify Potential Contaminants:** The contaminating cancer genes will appear as genes with a massive and statistically significant *negative* log2 fold change (e.g., LFC < -8). This indicates they are highly expressed in the "CAR T only" group (the baseline) and nearly absent in the CAR T-IL15 group.
3.  **Filter and Re-run:** Create a list of these genes, filter them from your original count matrix as described above, and then re-run the differential expression analysis.

**Caution:** This alternative method carries a risk. You might inadvertently remove genes that are genuinely and strongly downregulated by the IL-15 co-expression. Therefore, it is essential to manually inspect the list of potential contaminants to confirm they are known cancer-associated genes and not crucial T-cell-related genes. The first strategy using a pure cancer cell profile is strongly recommended for accuracy.