# The genus of the Riemann surface C.
g = 3
# The degree of the symmetric power X = C^(d).
d = 15

# We want to find the smallest and largest possible rank of the Neron-Severi
# group of X, denoted ρ(X).

# The key formula relates the rank of the Neron-Severi group of a symmetric power
# of a curve, ρ(C^(d)), to the rank of the Neron-Severi group of the curve C
# itself, ρ(C), and that of its Jacobian variety, ρ(J(C)).
# The formula is: ρ(C^(d)) = ρ(C) + ρ(J(C)).

# For any smooth projective curve C, the Neron-Severi group is generated by the
# class of a point, so its rank is always 1.
rho_C = 1

# The Jacobian J(C) is a g-dimensional abelian variety. For g=3, it is a
# 3-dimensional abelian variety. The rank of its Neron-Severi group, ρ(J(C)),
# can vary depending on the specific properties of the curve C.
# For a g-dimensional abelian variety A, the rank ρ(A) is bounded by:
# 1 <= ρ(A) <= g^2.
g_sq = g**2

# --- Smallest Possible Rank ---
# The minimum rank ρ(J(C)) is 1. This occurs for a "very general" curve C,
# whose Jacobian has no extra endomorphisms (i.e., its endomorphism ring is ℤ).
min_rho_J_C = 1
smallest_rank = rho_C + min_rho_J_C

# --- Largest Possible Rank ---
# The maximum rank ρ(J(C)) is g^2. This occurs for a special curve C with
# Complex Multiplication (CM), whose Jacobian is isogenous to a product of g
# CM elliptic curves. Such curves exist for g=3 (e.g., the Fermat quartic curve).
max_rho_J_C = g_sq
largest_rank = rho_C + max_rho_J_C

# --- Print the Results ---
print("The problem is to find the smallest and largest possible rank of the Neron-Severi group of X = C^(15), where C is a genus 3 curve.")
print(f"The rank is given by the formula: ρ(X) = ρ(C) + ρ(J(C)).")
print(f"Here, ρ(C) = {rho_C} and the rank ρ(J(C)) for the g={g} Jacobian can vary.")
print("-" * 20)

print("To find the smallest rank of NS(X):")
print("We use the minimum possible rank for ρ(J(C)), which is 1.")
print(f"Smallest rank = ρ(C) + min(ρ(J(C))) = {rho_C} + {min_rho_J_C} = {smallest_rank}")
print()

print("To find the largest rank of NS(X):")
print(f"We use the maximum possible rank for ρ(J(C)), which for g={g} is g^2 = {g_sq}.")
print(f"Largest rank = ρ(C) + max(ρ(J(C))) = {rho_C} + {max_rho_J_C} = {largest_rank}")
