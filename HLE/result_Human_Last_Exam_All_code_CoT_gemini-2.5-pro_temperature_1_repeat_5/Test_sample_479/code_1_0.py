import math

def demonstrate_torus_curvature():
    """
    This function demonstrates that a torus of genus 1 can have a mean curvature
    that never vanishes, by choosing appropriate parameters for its major and minor radii.
    """
    # A torus is a surface of genus 1. Let it be generated by revolving a circle
    # of minor radius r around an axis at a distance R (major radius) from the
    # center of the circle. We need R > r for a smooth embedded surface.
    R = 3.0
    r = 1.0

    print(f"We will check if a torus with major radius R = {R} and minor radius r = {r} can have non-vanishing mean curvature.")
    # The condition for the mean curvature (with inward normal) to be always positive
    # is R > 2*r.
    is_condition_met = R > 2 * r
    print(f"The condition is R > 2*r. For our values, is {R} > 2 * {r}? {is_condition_met}.")
    print("-" * 50)

    # The formula for the mean curvature H (with respect to the inward-pointing normal)
    # depends on the position on the torus, parameterized by an angle theta.
    # H(theta) = (R + 2*r*cos(theta)) / (2*r*(R + r*cos(theta)))
    
    print("The formula for the mean curvature H as a function of angle theta is:")
    print("H = (Numerator) / (Denominator), where:")
    print("Numerator = R + 2*r*cos(theta)")
    print("Denominator = 2*r*(R + r*cos(theta))")
    print("-" * 50)

    # Analyze the sign of the numerator and denominator for all possible values of theta.
    # The term cos(theta) ranges from -1 to 1.

    # Numerator analysis
    num_min_val = R + 2 * r * (-1)
    num_max_val = R + 2 * r * (1)
    print("1. Analyzing the Numerator: R + 2*r*cos(theta)")
    print(f"   Its minimum value is when cos(theta) = -1.")
    print(f"   Equation for minimum value: {R} + 2 * {r} * (-1) = {num_min_val}")
    print(f"   Its maximum value is when cos(theta) = 1.")
    print(f"   Equation for maximum value: {R} + 2 * {r} * (1) = {num_max_val}")

    # Denominator analysis
    den_term_min_val = R + r * (-1)
    den_term_max_val = R + r * (1)
    print("\n2. Analyzing the Denominator: 2*r*(R + r*cos(theta))")
    print(f"   The term (R + r*cos(theta)) has a minimum value of {R} + {r}*(-1) = {den_term_min_val}")
    print(f"   Since R > r, this term is always positive.")
    print(f"   The factor 2*r = {2*r} is also positive.")
    
    print("-" * 50)
    
    if num_min_val > 0 and den_term_min_val > 0:
        print("Conclusion:")
        print("Since both the numerator and the denominator are always strictly positive,")
        print("the mean curvature H is strictly positive everywhere on this torus.")
        print("\nThis demonstrates that a surface of genus 1 that bounds a compact region can have non-vanishing mean curvature.")
    else:
        print("For these parameters, the mean curvature may become zero or change sign.")

demonstrate_torus_curvature()