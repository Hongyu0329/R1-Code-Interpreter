import sympy

def solve_log_blowup_dimension():
    """
    Calculates the dimension of the log blowup of a point P with log structure N^3
    along the log ideal I generated by (1,0,0) and (0,1,0).
    """
    # Step 1: Define the basis vectors for the cone corresponding to N^3.
    # This is the positive octant in R^3, generated by the standard basis vectors.
    e1 = sympy.Matrix([1, 0, 0])
    e2 = sympy.Matrix([0, 1, 0])
    e3 = sympy.Matrix([0, 0, 1])
    
    print(f"The original space has dimension {e1.rows}, corresponding to the log structure N^{e1.rows}.")
    print("-" * 30)

    # Step 2: Define the generators of the log ideal I.
    i1 = sympy.Matrix([1, 0, 0])
    i2 = sympy.Matrix([0, 1, 0])
    
    print("The log ideal I is generated by:")
    print(f"i1 = {i1.T}")
    print(f"i2 = {i2.T}")
    print("-" * 30)

    # Step 3: The log blowup introduces a new ray given by the sum of the ideal generators.
    new_vector = i1 + i2
    
    print("The subdivision vector for the blowup is the sum of ideal generators:")
    print(f"v = i1 + i2 = {i1.T} + {i2.T} = {new_vector.T}")
    print("-" * 30)

    # Step 4: Define the new cones after subdivision. These correspond to the affine charts of the blowup.
    # Chart 1 is generated by e1, the new vector, and e3.
    # Chart 2 is generated by e2, the new vector, and e3.
    
    # Step 5: Calculate the dimension of each chart by finding the rank of the matrix of its generators.
    
    # For Chart 1
    M1 = sympy.Matrix.hstack(e1, new_vector, e3)
    dim1 = M1.rank()
    print("Chart 1 of the blowup is generated by e1, v, and e3.")
    print(f"Matrix for Chart 1:\n{M1}")
    print(f"Dimension of Chart 1 = rank(Matrix) = {dim1}")
    print("-" * 30)

    # For Chart 2
    M2 = sympy.Matrix.hstack(e2, new_vector, e3)
    dim2 = M2.rank()
    print("Chart 2 of the blowup is generated by e2, v, and e3.")
    print(f"Matrix for Chart 2:\n{M2}")
    print(f"Dimension of Chart 2 = rank(Matrix) = {dim2}")
    print("-" * 30)
    
    # Step 6: The dimension of the blowup is the maximum dimension of its charts.
    dim_blowup = max(dim1, dim2)
    
    print("The dimension of the log blowup is the maximum dimension of its charts.")
    print(f"Dimension = max({dim1}, {dim2}) = {dim_blowup}")

solve_log_blowup_dimension()