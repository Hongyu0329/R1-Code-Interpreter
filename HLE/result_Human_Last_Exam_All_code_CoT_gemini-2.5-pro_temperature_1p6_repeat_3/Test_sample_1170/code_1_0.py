def solve_tt_primes():
    """
    This function solves the problem based on the analysis of the tt-spectrum of D_b(E(C_p)).

    The analysis concluded that under the implicit assumption of k=F_p and p=3, all 20 objects
    listed generate a prime tt-ideal.

    The prime ideals not generated by any object on the list are the three closed points
    on the representation-theoretic line L_V (P_{V,0}, P_{V,1}, P_{V,2}) and one closed
    point on the topological line L_T (P_{T,0}). This amounts to a total of 4 ungenerated
    prime ideals.
    """

    # First part of the answer: list of numbers of objects that generate a prime tt-ideal.
    # Based on the analysis, all 20 objects generate a prime ideal.
    generating_objects = list(range(1, 21))

    # Second part of the answer: how many prime tt-ideals are not generated.
    # Based on the k=F_3, p=3 hypothesis, this number is 4.
    non_generated_count = 4

    # Formatting the output string
    generating_objects_str = ",".join(map(str, generating_objects))
    
    final_answer = f"{generating_objects_str};{non_generated_count}"
    
    print(final_answer)

solve_tt_primes()