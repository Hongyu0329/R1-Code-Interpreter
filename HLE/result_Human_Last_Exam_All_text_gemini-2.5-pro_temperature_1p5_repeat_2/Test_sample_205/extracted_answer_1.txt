167[void main() {
    // Array to store the 158 digits of the result.
    // Memory: 158 * sizeof(digit) = 158D
    digit result[158] = {0};

    // Loop counters and carry variable.
    // 'i' and 'j' must hold values > 99, so 'char' (3D) is used.
    // 'carry' needs to hold intermediate products up to 999, so 'char' (3D) is used.
    char i, j, carry;

    // --- Calculation ---

    // Initialize result to 1 for the factorial calculation
    result[0] = 1;

    // Calculate 100! by multiplying by i = 2, 3, ..., 100
    for (i = 2; i <= 100; i++) {
        carry = 0;
        // Multiply each digit of the current result by 'i'
        for (j = 0; j < 158; j++) {
            // Perform multiplication and add the carry from the previous digit
            carry = result[j] * i + carry;
            // The new digit is the remainder of the division by 10
            result[j] = carry % 10;
            // The new carry is the quotient
            carry = carry / 10;
        }
    }

    // --- Output ---

    printf("100! = ");

    // Reuse 'carry' as a printing flag (0 = suppress leading zeros, 1 = start printing).
    // Reuse 'j' as the loop counter, iterating backwards.
    carry = 0;
    for (j = 157; j >= 0; j--) {
        if (carry == 0 && result[j] != 0) {
            // Found the most significant digit, so set flag to start printing.
            carry = 1;
        }

        if (carry == 1) {
            printf("%d", result[j]);
        }
    }

    // Handle the edge case where the result is 0.
    if (carry == 0) {
        printf("%d", 0);
    }
    
    printf("\n");
}]