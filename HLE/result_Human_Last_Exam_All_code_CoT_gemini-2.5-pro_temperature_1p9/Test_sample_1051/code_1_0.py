import math
import sys

def solve():
    """
    Finds the positive integer x that minimizes the total length.
    """
    # Read all lines from stdin and parse integers
    lines = sys.stdin.readlines()
    if not lines:
        print("Input is empty.")
        return
        
    try:
        a_values = [int(line.strip()) for line in lines]
    except ValueError:
        print("Invalid input: all lines must contain an integer.")
        return

    # Create a frequency map of the input integers
    counts = {}
    for val in a_values:
        if val in counts:
            counts[val] += 1
        else:
            counts[val] = 1
            
    # List of (value, count) pairs
    distinct_a = list(counts.items())
    if not distinct_a:
        # If no values were provided.
        print("No values provided.")
        return
        
    max_a = 0
    for val, _ in distinct_a:
        if val > max_a:
            max_a = val

    # Generate candidate values for x
    candidates = {1}
    # For small x values, we can check them all.
    # The reasoning shows that optimal x are of form floor(a_i/k).
    # This can be generated by looking at k from 1 to sqrt(a_i)
    # and a_i//k values. We union these candidates for all distinct a_i.
    for val, _ in distinct_a:
        limit = int(math.sqrt(val))
        for k in range(1, limit + 1):
            candidates.add(val // k)
            # The candidates k themselves will be generated when considering max_a
            # but adding them here for each `val` is also correct.
            candidates.add(k)
    
    min_total_length = -1
    best_x = -1

    # Iterate through all candidate values and find the one that minimizes the total length
    sorted_candidates = sorted(list(candidates))
    
    for x in sorted_candidates:
        if x == 0:
            continue
            
        current_total_length = 0
        for val, count in distinct_a:
            length_i = (val // x) + (val % x)
            current_total_length += count * length_i
        
        if min_total_length == -1 or current_total_length < min_total_length:
            min_total_length = current_total_length
            best_x = x
            
    print(f"The value of x that minimizes the total length is: {best_x}")
    print(f"The minimum total length is: {min_total_length}")

if __name__ == '__main__':
    # To run this code, you can pipe a file with numbers, e.g. `cat numbers.txt | python your_script.py`
    # Or enter numbers manually line by line and then press Ctrl+D (on Linux/macOS) or Ctrl+Z then Enter (on Windows).
    solve()
