import math

def explain_max_genus():
    """
    This function explains the reasoning to find the maximal genus of a surface
    in R^3 with non-vanishing mean curvature.
    """
    print("Step 1: Analyze the problem statement.")
    print("We are looking for the maximum possible genus of a smooth, compact, connected surface in R^3 that bounds a region and has a mean curvature vector that never vanishes.")
    print("This means the scalar mean curvature, H, is either always positive or always negative. Let's assume H > 0 everywhere.\n")

    print("Step 2: Check low-genus cases.")
    print("Genus 0 (Sphere): A sphere of radius r has constant mean curvature H = 1/r, which is positive. So, genus 0 is possible.")
    
    print("\nGenus 1 (Torus): A torus can be generated by revolving a circle of minor radius 'r' at a distance of a major radius 'R' from the axis of rotation.")
    print("The equation for its mean curvature H involves the position on the torus.")
    
    # Define parameters for a torus example
    R = 3.0
    r = 1.0

    print(f"\nThe equation for the mean curvature H of a torus is: H = (R + 2*r*cos(u)) / (2*r*(R + r*cos(u)))")
    print(f"Let's test with specific parameters: R = {R}, r = {r}.")
    print("For these values, the condition for H to be always positive is R > 2*r, which is true since 3 > 2*1.")
    
    # Analysis of the sign of H
    print("\nLet's analyze the sign of the numerator and denominator of the H equation:")
    print(f"Denominator = 2*r*(R + r*cos(u)) = 2*{r}*({R} + {r}*cos(u))")
    # Since R > r (for an embedded torus), R + r*cos(u) is always positive. So the denominator is always positive.
    print("The denominator is always positive because R > r.")
    
    print(f"\nNumerator = R + 2*r*cos(u) = {R} + 2*{r}*cos(u)")
    # cos(u) ranges from -1 to 1
    min_numerator = R - 2 * r
    max_numerator = R + 2 * r
    print(f"Since cos(u) is in [-1, 1], the numerator ranges from {R} - 2*{r} = {min_numerator} to {R} + 2*{r} = {max_numerator}.")
    
    if min_numerator > 0:
        print("Since the minimum value of the numerator is positive, the numerator is always positive.")
        print("Therefore, for a torus with R > 2r, the mean curvature H is always positive.")
        print("This shows that genus 1 is possible.\n")

    print("Step 3: Consider higher-genus cases (g >= 2).")
    print("A major theorem in differential geometry (attributed to Meeks, Simon, and Yau) states that any compact, embedded surface in R^3 with genus g >= 2 must have regions of positive mean curvature and regions of negative mean curvature.")
    print("By the Intermediate Value Theorem, such a surface must therefore have points where the mean curvature is exactly zero.")
    print("This violates the condition that the mean curvature never vanishes.\n")

    print("Step 4: Conclusion.")
    print("Based on the above steps:")
    print("- Genus 0 is possible.")
    print("- Genus 1 is possible.")
    print("- Genus >= 2 is not possible.")
    print("Therefore, the maximal possible genus is 1.")

    # Final Answer
    max_genus = 1
    print("\nFinal Equation:")
    print(f"Maximal Genus = {max_genus}")


explain_max_genus()