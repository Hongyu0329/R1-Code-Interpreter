import sys

def solve_navier_stokes_symmetry_dimension():
    """
    Calculates the dimension of the Lie group of symmetries of the
    3D incompressible Navier-Stokes equations.

    The dimension is found by summing the number of independent generators
    for each type of symmetry in the maximal finite-dimensional Lie algebra.
    """

    # The symmetries are composed of several distinct transformations.
    # We count the number of generators for each.

    # 1. Time translation: t' = t + s
    # This transformation is generated by a single vector field.
    time_translation_dim = 1

    # 2. Space translations: x' = x + c
    # In R^3, there are three independent directions for translation.
    space_translations_dim = 3

    # 3. Spatial rotations: x' = R * x, where R is in SO(3)
    # The rotation group SO(3) in R^3 is 3-dimensional.
    space_rotations_dim = 3

    # 4. Galilean boosts: x' = x - v*t, u' = u - v
    # These boosts can be applied in any of the three spatial directions.
    galilean_boosts_dim = 3

    # 5. Scaling transformation: t' = a^2*t, x' = a*x, u' = a^(-1)*u, p' = a^(-2)*p
    # There is a single one-parameter group of scaling transformations.
    scaling_dim = 1

    # 6. Pressure shift: p' = p + c
    # The pressure can be shifted by an arbitrary constant.
    pressure_shift_dim = 1

    # The total dimension is the sum of the dimensions of these independent symmetries.
    total_dimension = (time_translation_dim +
                       space_translations_dim +
                       space_rotations_dim +
                       galilean_boosts_dim +
                       scaling_dim +
                       pressure_shift_dim)

    # Print the breakdown of the calculation.
    print("The total dimension of the Lie group of symmetries is the sum of the dimensions of its components:")
    print(f" - Time translation:       {time_translation_dim}")
    print(f" - Space translations:     {space_translations_dim}")
    print(f" - Space rotations:        {space_rotations_dim}")
    print(f" - Galilean boosts:        {galilean_boosts_dim}")
    print(f" - Scaling transformation: {scaling_dim}")
    print(f" - Pressure shift:         {pressure_shift_dim}")
    print("-" * 30)
    
    # Print the final equation as requested.
    print("The final calculation is:")
    print(f"{time_translation_dim} + {space_translations_dim} + {space_rotations_dim} + {galilean_boosts_dim} + {scaling_dim} + {pressure_shift_dim} = {total_dimension}")


if __name__ == "__main__":
    solve_navier_stokes_symmetry_dimension()
