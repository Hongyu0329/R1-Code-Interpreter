import math

def count_power_subgroups_in_semidihedral(group_size):
    """
    Calculates the number of power (cyclic) subgroups in a semidihedral group.
    
    The formula for the number of cyclic subgroups in the semidihedral group SD_{2^n} is
    n + 2^(n-2) + 2^(n-3).
    
    Args:
        group_size (int): The size of the semidihedral group, must be a power of 2.
    """
    if group_size <= 0 or (group_size & (group_size - 1)) != 0:
        print("Error: Group size must be a positive power of 2.")
        return

    # For a semidihedral group of size 2^n, find n.
    # n = log2(group_size)
    n = int(math.log2(group_size))
    
    if n < 3:
        print(f"Error: Semidihedral group SD_{group_size} is not defined for n < 3.")
        return

    # 1. Number of cyclic subgroups within the maximal cyclic subgroup <r>
    # This is equal to n.
    subgroups_in_r = n

    # 2. Number of cyclic subgroups of order 2 generated by elements outside <r>
    # This is equal to 2^(n-2).
    subgroups_order_2_outside_r = 2**(n-2)

    # 3. Number of cyclic subgroups of order 4 generated by elements outside <r>
    # This is equal to 2^(n-3).
    subgroups_order_4_outside_r = 2**(n-3)
    
    # The total number of cyclic subgroups is the sum of these three counts.
    total_subgroups = subgroups_in_r + subgroups_order_2_outside_r + subgroups_order_4_outside_r
    
    print(f"For the semidihedral group of size {group_size}:")
    print(f"The value of n is {n}.")
    print(f"Number of cyclic subgroups inside the maximal cyclic subgroup <r> is {subgroups_in_r}.")
    print(f"Number of cyclic subgroups of order 2 from other elements is {subgroups_order_2_outside_r}.")
    print(f"Number of cyclic subgroups of order 4 from other elements is {subgroups_order_4_outside_r}.")
    
    # Print the final equation with the numbers, as requested.
    print("\nThe total number of power subgroups is calculated as follows:")
    print(f"{subgroups_in_r} + {subgroups_order_2_outside_r} + {subgroups_order_4_outside_r} = {total_subgroups}")


# Size of the group given in the problem
semidihedral_group_size = 512
count_power_subgroups_in_semidihedral(semidihedral_group_size)