# The dimension of the Lie group of symmetries for a system of differential equations
# is determined by the number of independent generators of transformations
# that leave the equations unchanged. For the incompressible Navier-Stokes
# equations in R^3 (in the absence of external forces), these symmetries are well-known.

# 1. Time translation: Invariance with respect to shifts in time (t -> t + const).
# This is generated by a single vector field.
time_translations = 1

# 2. Space translations: Invariance with respect to shifts in spatial coordinates
# (x -> x + const_vec). There are three independent directions for translation in R^3.
space_translations = 3

# 3. Space rotations: Invariance with respect to rotations of the spatial coordinates.
# The rotation group in 3D, SO(3), is 3-dimensional.
space_rotations = 3

# 4. Galilean boosts: Invariance with respect to changing to a frame of reference
# moving at a constant velocity. There are three independent directions for the boost velocity.
galilean_boosts = 3

# 5. Scaling transformations: The equations are invariant under a specific
# scaling of time, space, velocity, and pressure. This corresponds to one generator.
scaling_transformations = 1

# The total dimension is the sum of these individual counts. This gives the dimension
# of the finite-dimensional Lie algebra of the symmetry group.
total_dimension = (
    time_translations
    + space_translations
    + space_rotations
    + galilean_boosts
    + scaling_transformations
)

print("The dimension of the Lie group of symmetries is the sum of the number of generators for each type of symmetry:")
print(f"Time Translations       : {time_translations}")
print(f"Space Translations      : {space_translations}")
print(f"Space Rotations         : {space_rotations}")
print(f"Galilean Boosts         : {galilean_boosts}")
print(f"Scaling Transformation  : {scaling_transformations}")
print("-" * 35)

# We print the final equation showing how the total dimension is calculated.
print("Final Calculation:")
print(f"{time_translations} + {space_translations} + {space_rotations} + {galilean_boosts} + {scaling_transformations} = {total_dimension}")

print(f"\nThe total dimension is: {total_dimension}")