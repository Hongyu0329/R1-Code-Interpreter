import math

def count_power_subgroups_in_semidihedral(group_size):
    """
    Calculates the number of power subgroups (cyclic subgroups) in a semidihedral group.

    Args:
        group_size (int): The order of the semidihedral group, must be a power of 2.

    Returns:
        None. Prints the result directly.
    """
    if group_size <= 0 or (group_size & (group_size - 1)) != 0:
        print("Error: The size of a semidihedral group must be a power of 2.")
        return

    # For a semidihedral group of size 2^n, find n.
    n = int(math.log2(group_size))
    if n < 3:
        print(f"Error: A semidihedral group SD_{group_size} is only defined for n >= 3.")
        return
        
    print(f"For the semidihedral group of size {group_size}, the parameter n is {n}.")
    print("The total number of power subgroups is the sum of three components:\n")

    # 1. Number of cyclic subgroups in the maximal cyclic subgroup <r> of order 2^(n-1).
    # This is equal to the number of divisors of 2^(n-1), which is n.
    num_subgroups_from_r = n
    print(f"1. Number of cyclic subgroups contained within the maximal cyclic subgroup: {num_subgroups_from_r}")

    # 2. Number of cyclic subgroups of order 2 generated by elements outside <r>.
    # There are 2^(n-2) such subgroups.
    num_subgroups_order_2 = 2**(n - 2)
    print(f"2. Number of cyclic subgroups of order 2 generated by other elements: {num_subgroups_order_2}")

    # 3. Number of cyclic subgroups of order 4 generated by elements outside <r>.
    # There are 2^(n-3) such subgroups.
    num_subgroups_order_4 = 2**(n - 3)
    print(f"3. Number of cyclic subgroups of order 4 generated by other elements: {num_subgroups_order_4}")

    # Total number of power subgroups
    total_subgroups = num_subgroups_from_r + num_subgroups_order_2 + num_subgroups_order_4

    print("\nThe final equation for the total number of power subgroups is:")
    print(f"{num_subgroups_from_r} + {num_subgroups_order_2} + {num_subgroups_order_4} = {total_subgroups}")


# Size of the semidihedral group
group_size = 512
count_power_subgroups_in_semidihedral(group_size)