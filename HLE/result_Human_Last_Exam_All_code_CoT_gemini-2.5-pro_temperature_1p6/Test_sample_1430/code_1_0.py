import math

# Step 1: Define the parameters of the problem from the user's request.
g = 3  # The genus of the curve C
d = 15 # The degree of the symmetric power X = C^(d)

print("This script calculates the smallest and largest possible rank of the Néron-Severi group of X = C^(d),")
print(f"where C is a curve of genus g = {g} and X is its d = {d}-th symmetric power.\n")

# Step 2: Relate the rank of NS(X) to the rank of NS(J(C)).
# The rank of the Néron-Severi group is denoted by rho.
print("Step 1: Relate the rank of NS(X) to the rank of the Jacobian J(C).")
print("Let rho(V) denote the rank of the Néron-Severi group of a variety V.")
print(f"For d >= 2g - 1, there is a known decomposition of the second cohomology group of X:")
print("H^2(X, Q) is isomorphic to H^2(J(C), Q) (direct sum) H^2(C, Q),")
print("where J(C) is the Jacobian of C.")
condition = 2*g - 1
print(f"We must check if this condition holds for d = {d} and g = {g}:")
print(f"Is d >= 2*g - 1?  -->  {d} >= 2*{g} - 1  -->  {d} >= {condition}? This is {d >= condition}.")
print("\nSince the condition holds, the rank of the Néron-Severi group of X also splits:")
print("rho(X) = rho(J(C)) + rho(C)")
rho_C = 1
print(f"For any smooth projective curve C, its Néron-Severi group has rank 1. So, rho(C) = {rho_C}.")
print(f"This simplifies the equation to: rho(X) = rho(J(C)) + {rho_C}.\n")

# Step 3: Calculate the smallest possible rank.
print("Step 2: Find the smallest possible rank for rho(X).")
print("To find the minimum rho(X), we need the minimum possible value for rho(J(C)).")
print("For a 'generic' curve C of genus g, its Jacobian J(C) is simple and its endomorphism ring is just the integers Z.")
print("In this generic case, the Néron-Severi group NS(J(C)) is generated by the principal polarization (the theta divisor).")
min_rho_J = 1
print(f"Therefore, the minimum possible rank for the Jacobian is rho(J(C))_min = {min_rho_J}.")
min_rho_X = min_rho_J + rho_C
print("The smallest possible rank for NS(X) is rho(X)_min = rho(J(C))_min + rho(C).")
print(f"So, the final equation for the smallest rank is:")
print(f"rho(X)_min = {min_rho_J} + {rho_C} = {min_rho_X}\n")

# Step 4: Calculate the largest possible rank.
print("Step 3: Find the largest possible rank for rho(X).")
print("To find the maximum rho(X), we need the maximum possible value for rho(J(C)).")
print(f"The rank rho(J(C)) is bounded by the Hodge number h^(1,1)(J(C)), which is equal to g^2.")
h11_J = g**2
print(f"So, rho(J(C)) <= g^2 = {g}^2 = {h11_J}.")
print("This maximum is achieved for special curves C whose Jacobians are of Complex Multiplication (CM) type.")
print("A classic example is a curve C whose Jacobian is isogenous to a product of elliptic curves with CM.")
print("For a genus 3 curve, the Jacobian J(C) can be isogenous to E^3, a product of three CM elliptic curves.")
print("The rank of the Néron-Severi group for a product E^n is given by the formula:")
print("rho(E^n) = n * rho(E) + (n choose 2) * rank(End(E))")
n = g # Here, the Jacobian is a g=3 dimensional variety, decomposing into n=3 elliptic curves.
rho_E = 1 # The rank of NS group of any elliptic curve is 1.
rank_End_E_CM = 2 # An elliptic curve with CM has an endomorphism ring of rank 2.
n_choose_2 = math.comb(n, 2)
print(f"\nFor our case, n = {n}, rho(E) = {rho_E}, and for a CM elliptic curve, rank(End(E)) = {rank_End_E_CM}.")
max_rho_J = n * rho_E + n_choose_2 * rank_End_E_CM
print("So, the maximum rank for the Jacobian is rho(J(C))_max = n * rho(E) + (nC2) * rank(End(E)).")
print(f"The final equation for the largest rank of the Jacobian is:")
print(f"rho(J(C))_max = {n} * {rho_E} + {n_choose_2} * {rank_End_E_CM} = {max_rho_J}")
max_rho_X = max_rho_J + rho_C
print(f"\nNow we find the largest possible rank for NS(X), which is rho(X)_max = rho(J(C))_max + rho(C).")
print(f"So, the final equation for the largest rank is:")
print(f"rho(X)_max = {max_rho_J} + {rho_C} = {max_rho_X}\n")


# Step 5: Final Answer summary.
print("Summary of Results:")
print(f"The smallest possible rank of the Neron-Severi group of X is {min_rho_X}.")
print(f"The largest possible rank of the Neron-Severi group of X is {max_rho_X}.")