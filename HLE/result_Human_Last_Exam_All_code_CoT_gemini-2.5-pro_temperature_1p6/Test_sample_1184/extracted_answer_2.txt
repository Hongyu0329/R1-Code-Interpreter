```python
def find_calcium_channel_hotspots():
    """
    This script identifies and prints key amino acid residues on the human
    voltage-gated calcium channel beta-1 subunit (CaV-beta1, UniProt: P54283).

    The residues are categorized into two groups:
    1. Hotspots for physical interaction with the alpha-1 subunit.
    2. Hotspots for fine-tuning the gating properties of the alpha-1 subunit.

    The residue positions are based on the canonical human CaV-beta1 sequence.
    """

    # --- 1. Residues for direct interaction with the alpha-1 subunit ---
    # These residues are located in a conserved hydrophobic groove of the
    # Guanylate Kinase (GK) domain of the beta-1 subunit. They form the
    # core binding pocket for the Alpha Interaction Domain (AID) of the
    # alpha-1 subunit.
    interaction_hotspots = {
        394: "Leu (L)",
        397: "Tyr (Y)",
        458: "Val (V)",
        464: "Trp (W)",
        468: "Met (M)"
    }

    # --- 2. Residues for modulating the gating properties of the alpha-1 subunit ---
    # These residues are critical for the allosteric regulation of channel
    # opening, closing, and inactivation, a function that goes beyond mere binding.
    # They are located in flexible regions like the N-terminus and the HOOK region.
    gating_modulation_hotspots = {
        "1-40": "N-terminus region (e.g., M1-P40)",
        258: "Asp (D)",
        261: "Arg (R)"
    }

    print("--- Calcium Channel Beta-1 Subunit: Key Residues ---")
    print("\n1) Hotspots for Interaction with Alpha-1 Subunit:")
    print("   (Located in the GK domain's binding groove)")
    print("-" * 55)
    print(f"{'Position':<10} | {'Residue':<10}")
    print("-" * 55)
    for position, residue in interaction_hotspots.items():
        print(f"{position:<10} | {residue:<10}")

    print("\n\n2) Hotspots for Fine-Tuning Gating Properties of Alpha-1 Subunit:")
    print("   (Located in the N-terminus and HOOK regions)")
    print("-" * 55)
    print(f"{'Position':<10} | {'Residue / Region':<30}")
    print("-" * 55)
    for position, residue in gating_modulation_hotspots.items():
        print(f"{position:<10} | {residue:<30}")


if __name__ == '__main__':
    find_calcium_channel_hotspots()
```