```python
import math

def generate_vertical_slice_formulation():
    """
    This function formulates and prints the mathematical equations for the
    vertical cross-section of a Gaussian Interval Type-3 Membership Function (IT3 MF).
    """

    # --- Define Parameters ---
    # These are the example values that will be used to construct the final equations.

    # The fixed primary input for the vertical cross-section
    x_prime = 2.5
    
    # The center (mean) of the Gaussian functions
    c = 5.0

    # Define the standard deviation intervals.
    # For a Gaussian, a larger sigma results in a higher membership value (for x != c).
    # Therefore, the 'overline' sigmas (for the upper bound) must be larger than the
    # 'underline' sigmas (for the lower bound).

    # Standard deviation interval for the LMF (Lower Membership Function) of the IT3 set
    underline_sigma_L = 1.8
    underline_sigma_U = 2.2
    
    # Standard deviation interval for the UMF (Upper Membership Function) of the IT3 set
    overline_sigma_L = 2.8
    overline_sigma_U = 3.2

    # --- Mathematical Formulation ---
    # The general form of a Gaussian is: μ(x) = exp( -(x - c)^2 / (2 * σ^2) )
    # For the IT3 MF, σ is a linear function of u: σ(u) = (σ_U - σ_L) * u + σ_L

    # Step 1: Calculate the constant numerator part of the exponent: -(x' - c)^2 / 2
    numerator = -((x_prime - c)**2) / 2.0

    # Step 2: Calculate coefficients for the linear sigma functions
    # For the lower bound: underline_σ(u) = (underline_σ_U - underline_σ_L) * u + underline_σ_L
    underline_sigma_diff = underline_sigma_U - underline_sigma_L
    
    # For the upper bound: overline_σ(u) = (overline_σ_U - overline_σ_L) * u + overline_σ_L
    overline_sigma_diff = overline_sigma_U - overline_sigma_L

    # --- Print the Final Formulation ---
    # The output presents the complete equations with the calculated numbers.
    print(f"The mathematical formulation for the vertical cross-section of a Gaussian IT3 MF at the fixed primary input x = {x_prime} is an Interval Type-2 Fuzzy Set over the secondary variable u ∈ [0, 1].")
    print("This set is defined by its lower and upper membership functions, underline_μ(u) and overline_μ(u):\n")

    # Construct and print the lower bound equation
    lower_bound_sigma_eq = f"({underline_sigma_diff:.1f}*u + {underline_sigma_L})"
    lower_bound_eq = f"underline_μ({x_prime}, u) = exp( {numerator} / ({lower_bound_sigma_eq})**2 )"
    
    print("Lower Bound Formulation:")
    print(lower_bound_eq)
    
    # Construct and print the upper bound equation
    upper_bound_sigma_eq = f"({overline_sigma_diff:.1f}*u + {overline_sigma_L})"
    upper_bound_eq = f"overline_μ({x_prime}, u) = exp( {numerator} / ({upper_bound_sigma_eq})**2 )"
    
    print("\nUpper Bound Formulation:")
    print(upper_bound_eq)


if __name__ == '__main__':
    generate_vertical_slice_formulation()

```