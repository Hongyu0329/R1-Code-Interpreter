```python
import sympy
from sympy import symbols, integrate, pi, log, sqrt, simplify, pprint

def calculate_cross_section():
    """
    Calculates the total cross section for fermion-fermion scattering mediated by a pseudoscalar boson.
    """
    # Define symbols for the equation variables. We assume they are real and positive.
    E, m, M, g = symbols('E m M g', real=True, positive=True)
    cos_theta = symbols('cos_theta')

    print("Step 1: Define Kinematic Variables in the Center-of-Mass Frame")
    # s is the square of the center-of-mass energy.
    s = 4 * E**2
    # p_sq is the squared momentum of the incoming fermions.
    p_sq = E**2 - m**2

    # Mandelstam variables t and u expressed in terms of E, m, and the scattering angle.
    t = -2 * p_sq * (1 - cos_theta)
    u = -2 * p_sq * (1 + cos_theta)

    print(f"s = {s}")
    print(f"t = {t}")
    print(f"u = {u}\n")

    print("Step 2: Define the Spin-Averaged Squared Matrix Element, |M|^2")
    # The squared matrix element consists of three parts:
    # 1. The t-channel direct term
    # 2. The u-channel direct term
    # 3. The interference term between the t and u channels
    term_t_sq = g**4 * t**2 / (t - M**2)**2
    term_u_sq = g**4 * u**2 / (u - M**2)**2
    term_interference = g**4 * (t * u - 4 * m**2 * s) / ((t - M**2) * (u - M**2))

    # The total spin-averaged squared matrix element
    M2_bar = term_t_sq + term_u_sq + term_interference

    print("The squared amplitude is |M|^2 = |M_t|^2 + |M_u|^2 - 2*Re(M_t*M_u^*)")
    print("\nComponent from t-channel, |M_t|^2:")
    pprint(term_t_sq)
    print("\nComponent from u-channel, |M_u|^2:")
    pprint(term_u_sq)
    print("\nComponent from interference, -2*Re(M_t*M_u^*):")
    pprint(term_interference)
    print("\nTotal spin-averaged |M|^2:")
    pprint(M2_bar)

    print("\nStep 3: Define the Differential Cross Section dsigma/dOmega")
    # The differential cross section formula in the CM frame
    dsigma_dOmega = M2_bar / (64 * pi**2 * s)
    print("\ndsigma/dOmega = |M|^2 / (64 * pi^2 * s):")
    pprint(dsigma_dOmega)

    print("\nStep 4: Integrate to Find the Total Cross Section sigma")
    # The total cross section is the integral over the solid angle dOmega = 2*pi*d(cos_theta)
    # The integral is from cos_theta = -1 to 1.
    integrand = dsigma_dOmega * 2 * pi

    # Perform the symbolic integration
    # The result can be very complex, so we simplify it.
    print("Integrating the differential cross section over the solid angle from cos(theta) = -1 to 1...")
    total_sigma_expr = integrate(integrand, (cos_theta, -1, 1))
    
    # Simplify the final expression
    total_sigma_simplified = simplify(total_sigma_expr)

    print("\nFinal Result: The Total Cross Section sigma(E)")
    print("---------------------------------------------")
    pprint(total_sigma_simplified)
    print("---------------------------------------------")

if __name__ == '__main__':
    calculate_cross_section()
```