import math

def solve():
    """
    This function demonstrates the step-by-step simplification of the group presentation
    for the fundamental group of the double branched cover of S^4 over the 5-twist-spun trefoil.
    """
    print("The starting presentation of the fundamental group is:")
    print("pi_1(M) = <x, y | xyx = yxy, yx^5 = x^5y, x^2 = 1, y^2 = 1>\n")

    print("Step 1: Simplify the term x^5 using the relation x^2 = 1.")
    print("Since x^2 = 1, any even power of x is 1. We can write x^5 as:")
    print("x^5 = x^(2*2 + 1) = (x^2)^2 * x")
    print("Substituting x^2 = 1, we get: 1^2 * x = x.")
    print("So, the term x^5 simplifies to x.\n")

    print("Step 2: Substitute x^5 = x into the relation yx^5 = x^5y.")
    print("The relation 'yx^5 = x^5y' becomes 'yx = xy'.")
    print("This means the generators commute, making the group abelian with respect to these generators.\n")

    print("Step 3: Simplify the first relation 'xyx = yxy' using the commutativity 'xy = yx'.")
    print("Left-hand side (LHS): xyx = x(yx) = x(xy) = (x*x)y = x^2 * y.")
    print("Right-hand side (RHS): yxy = y(xy) = y(yx) = (y*y)x = y^2 * x.")
    print("So, the relation 'xyx = yxy' simplifies to 'x^2 * y = y^2 * x'.\n")

    print("Step 4: Use the relations x^2 = 1 and y^2 = 1 in the simplified relation from Step 3.")
    print("The relation 'x^2 * y = y^2 * x' becomes '1 * y = 1 * x'.")
    print("This simplifies to 'y = x'.\n")

    print("Step 5: Reduce the entire group presentation using 'y = x'.")
    print("The group is generated by a single generator <x>.")
    print("The relations become:")
    print("  1. xyx = yxy  =>  xxx = xxx  =>  x^3 = x^3 (trivial)")
    print("  2. yx = xy    =>  xx = xx    =>  x^2 = x^2 (trivial)")
    print("  3. x^2 = 1")
    print("  4. y^2 = 1    =>  x^2 = 1 (redundant)")
    print("All relations collapse to the single, non-trivial relation 'x^2 = 1'.\n")

    print("Step 6: Final group identification and minimal number of generators.")
    print("The final presentation is <x | x^2 = 1>.")
    print("This is the cyclic group of order 2, Z_2.")
    print("A cyclic group of order 2 is generated by one element.")
    min_generators = 1
    print(f"\nThe minimal number of generators is: {min_generators}")

solve()