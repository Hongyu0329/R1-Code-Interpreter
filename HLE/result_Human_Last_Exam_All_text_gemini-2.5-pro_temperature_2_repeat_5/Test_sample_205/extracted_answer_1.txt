172[
void main() {
    // Array to store the 158 digits of 100! in reverse order.
    digit z[158];
    
    // Variables for calculation. Types are chosen to minimize memory.
    char i, j;          // Loop counters (up to 157 is fine for char type 0-999)
    char num_digits;    // Tracks current number of digits (max 158)
    char product;       // Stores intermediate product (max 999)
    short carry;        // Stores carry-over (max 99)

    // Initialize array to 0's.
    for (j = 0; j < 158; j = j + 1) {
        z[j] = 0;
    }

    // Start with 1! = 1.
    z[0] = 1;
    num_digits = 1;

    // Calculate factorial by multiplying by i from 2 to 100.
    for (i = 2; i <= 100; i = i + 1) {
        carry = 0;
        // Multiply the large number z by i.
        for (j = 0; j < num_digits; j = j + 1) {
            product = z[j] * i + carry;
            z[j] = product % 10;
            carry = product / 10;
        }
        
        // If there is a remaining carry, append its digits.
        while (carry > 0) {
            z[num_digits] = carry % 10;
            num_digits = num_digits + 1;
            carry = carry / 10;
        }
    }

    // Print the result from the most significant digit.
    // A while loop is used to safely decrement the unsigned char 'j'.
    j = num_digits;
    while (j > 0) {
        j = j - 1;
        printf("%d", z[j]);
    }
}
]