def find_collatz_path(n):
    """
    Calculates and prints the Collatz conjecture path for a given integer n.
    The Collatz sequence is generated by:
    - If n is even, the next number is n / 2.
    - If n is odd, the next number is 3n + 1.
    The sequence is conjectured to always reach 1 for any positive integer n.
    """
    if not isinstance(n, int) or n <= 0:
        print("Error: Please provide a positive integer.")
        return

    path = [n]
    while n != 1:
        if n % 2 == 0:
            # n is even
            n = n // 2
        else:
            # n is odd
            n = 3 * n + 1
        path.append(n)

    # Convert all numbers in the path to strings to print them
    # The requirement is to "output each number in the final equation"
    path_str = [str(num) for num in path]
    
    # Print the final path joined by arrows
    print(" -> ".join(path_str))

# You can change this number to find the path for any positive integer.
start_number = 12
print(f"The Collatz path for {start_number} is:")
find_collatz_path(start_number)
