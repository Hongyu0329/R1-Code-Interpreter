To design a tightly secure t-out-of-n threshold signature scheme with a two-round signing protocol, one should implement a distributed version of the Schnorr signature algorithm, following principles established by modern protocols like FROST. The design consists of a one-time setup phase and the two-round signing protocol itself.

**1. Setup: Distributed Key Generation (DKG)**
A one-time, dealerless setup using a protocol like Pedersen DKG is performed. This results in:
*   A single group public key `Y` known to all. The corresponding secret key `x` is never reconstructed.
*   Each of the `n` parties `P_i` holding a secret share `x_i` of `x` and a public verification key for that share, `Y_i = x_i*G`.

**2. Two-Round Signing Protocol**
For a set `S` of `t` parties to sign a message `m`:

**Round 1: Commitment Phase**
Each participating party `P_i` performs the following:
1.  Generates two secret, random nonces `d_i, e_i`.
2.  Computes public commitments `D_i = d_i*G` and `E_i = e_i*G`.
3.  Broadcasts the pair of commitments `(D_i, E_i)` to all other participants.

**Round 2: Signature Share Generation Phase**
After receiving all Round 1 commitments, each party `P_i` performs the following:
1.  Computes a binding factor `ρ_j` for each participant `j` by hashing the message `m` and all commitments from Round 1. This binds each party to their chosen nonce.
2.  Computes the group nonce commitment `R = Σ_{j∈S} (D_j + ρ_j*E_j)`.
3.  Computes the group challenge `c = Hash(Y, R, m)`.
4.  Calculates their partial signature `s_i = (d_i + e_i*ρ_i) + c*λ_i*x_i`, where `λ_i` is the public Lagrange coefficient for party `i`.
5.  Broadcasts the partial signature `s_i`.

**3. Signature Aggregation**
1.  An aggregator collects the `t` partial signatures `s_j`. For robustness, each partial signature can be verified against its corresponding public values (`s_j*G ?= (D_j + ρ_j*E_j) + c*λ_j*Y_j`), allowing for the identification of malicious parties.
2.  The final signature `s` is computed by summing the valid partial signatures: `s = Σ_{j∈S} s_j`.
3.  The complete and final signature is the pair `(R, s)`. It is a standard-format Schnorr signature that can be verified against the single group public key `Y`.

This two-round design is essential for security. The commitment round prevents adversaries from choosing their nonce contribution maliciously after seeing honest parties' contributions, thereby thwarting forgery attacks and leading to a provably ("tightly") secure scheme.