The proposed scheme design involves a distributed key generation phase using a verifiable secret sharing scheme to create a group public key `PK` and individual secret shares `sk_i`. The two-round signing protocol for a set of `t` signers proceeds as follows:

**Round 1: Commitment**
1.  Each signer `P_i` generates a random nonce `k_i` and broadcasts its commitment `R_i = g^{k_i}`.

**Round 2: Partial Signature Generation**
1.  After receiving all commitments `R_j`, each signer `P_i` computes a coefficient `b_j` for each participant `j` based on a hash of all public information (all `R_j`, the message `m`, and group public key `PK`), ensuring all nonces are bound together.
2.  Each signer calculates the aggregate nonce commitment `R = Π R_j^{b_j}` and the challenge `c = H(PK, R, m)`.
3.  Each signer computes its Lagrange coefficient `λ_i` for the current signing set.
4.  Each signer computes and broadcasts its partial signature `s_i = (b_i * k_i) + (c * λ_i * sk_i)`.

Finally, an aggregator sums the partial signatures `s = Σ s_i` to form the final signature `(R, s)`. This design achieves tight security by adopting the nonce aggregation strategy from schemes like MuSig2, which prevents attacks that exploit weaknesses in simpler aggregation methods, while the use of Lagrange interpolation on secret shares ensures the `t-out-of-n` threshold property.