The proposed filtering strategy is to identify and remove genes based on a combination of a highly negative log2 fold change and a significant adjusted p-value. The logical steps, implementable via the command line, are as follows:

1.  **Perform Differential Expression:** Run a DE analysis comparing the CAR-IL15 samples against the CAR-only samples, using CAR-only as the baseline. This will produce a results table with log2FoldChange (LFC) and adjusted p-values (padj) for each gene.

2.  **Define Contaminant Criteria:** A gene is considered a contaminant if it meets both of the following conditions, which indicates it was highly abundant in the CAR-only group but nearly absent in the cleaner CAR-IL15 group:
    *   `log2FoldChange < -5` (at least 32-fold higher expression in the CAR-only group).
    *   `padj < 0.01` (the difference is highly statistically significant).

3.  **Generate Exclusion List:** Use a command-line tool like `awk` to parse the DE results table and create a text file containing only the names of the genes that meet the contaminant criteria. For example: `awk -F'\t' 'NR>1 && $2 < -5 && $6 < 0.01 {print $1}' de_results.tsv > contaminant_genes.txt` (assuming LFC is column 2 and padj is column 6).

4.  **Filter Datasets:** Use the generated `contaminant_genes.txt` list with a tool like `grep` to remove these genes from your final DE results table and your normalized counts matrix before conducting any further downstream analyses like GSEA, pathway analysis, or visualization.