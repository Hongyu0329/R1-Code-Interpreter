```python
import numpy as np
from scipy.special import gamma

def calculate_infinite_product(z_val):
    """
    Calculates the value of the infinite product P = prod_{n=3 to inf} (1 - z^3/n^3)
    for a given complex number z.

    The calculation is based on the formula:
    P = 1 / [ (1 - z^3) * (1 - z^3/8) * Γ(1-z) * Γ(1-ωz) * Γ(1-ω²z) ]
    where ω is the principal cube root of unity.
    """
    try:
        z = complex(z_val)
    except (ValueError, TypeError):
        print("Error: Input 'z' must be a number (or a string convertible to a number).")
        return

    # Check for values of z that would make the denominator zero or infinite
    if z.imag == 0 and z.real == int(z.real):
        if z.real >= 1:
            print(f"Error: For integer z >= 1, Γ(1-z) is infinite, making the product 0.")
            print("∏_{n=3}^{∞} (1 - z^3/n^3) = 0")
            return
    if (1 - z**3 == 0) or (1 - z**3 / 8 == 0):
        print(f"Error: For z = {z}, a term in the denominator is zero, making the product infinite.")
        return

    # Define the principal cube root of unity, ω = e^(i*2*pi/3)
    omega = np.exp(1j * 2 * np.pi / 3)
    omega_sq = omega**2

    # The final equation is Result = 1 / (term_n1 * term_n2 * gamma_z * gamma_omega_z * gamma_omega_sq_z)
    # We will now calculate and print each of these numbers.
    print(f"Calculating the product for z = {z}\n")
    print("The final equation is of the form: Result = 1 / (T1 * T2 * G1 * G2 * G3)")
    print("Here are the values of each component:")

    # Calculate the terms for n=1 and n=2
    term_n1 = 1 - z**3
    term_n2 = 1 - z**3 / 8
    print(f"T1 (term for n=1, 1 - z^3) = {term_n1}")
    print(f"T2 (term for n=2, 1 - z^3/8) = {term_n2}")

    # Calculate the Gamma function components
    gamma_z = gamma(1 - z)
    gamma_omega_z = gamma(1 - omega * z)
    gamma_omega_sq_z = gamma(1 - omega_sq * z)
    print(f"G1 (Γ(1-z)) = {gamma_z}")
    print(f"G2 (Γ(1-ωz)) = {gamma_omega_z}")
    print(f"G3 (Γ(1-ω²z)) = {gamma_omega_sq_z}")

    # Calculate the total denominator
    denominator = term_n1 * term_n2 * gamma_z * gamma_omega_z * gamma_omega_sq_z
    print(f"\nTotal Denominator (T1*T2*G1*G2*G3) = {denominator}")

    # The result is 1 / denominator
    result = 1 / denominator
    print(f"\nFinal Result (1 / Denominator) = {result}")


if __name__ == '__main__':
    # Example usage with z = 0.5. You can change this value.
    z_value = 0.5
    calculate_infinite_product(z_value)
```