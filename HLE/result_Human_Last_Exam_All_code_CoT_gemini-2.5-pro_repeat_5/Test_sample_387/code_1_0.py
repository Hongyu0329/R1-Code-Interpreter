import numpy as np

# Step 1: Define the geometric setting using vectors.
# The log point P with log structure N^3 corresponds to a 3D space.
# The fan for this space has a single cone, sigma, generated by the standard basis vectors.
e1 = np.array([1, 0, 0])
e2 = np.array([0, 1, 0])
e3 = np.array([0, 0, 1])

original_generators = np.array([e1, e2, e3])
original_dim = np.linalg.matrix_rank(original_generators)

print(f"The original space is a toric variety corresponding to a cone generated by:")
print(original_generators)
print(f"The dimension of the original space is rank({[list(e) for e in original_generators]}) = {original_dim}.\n")

# Step 2: Define the log ideal and the corresponding subdivision vector.
# The log ideal I is generated by (1,0,0) and (0,1,0).
# The log blowup introduces a new ray given by the sum of the ideal's generators.
ideal_gen1 = e1
ideal_gen2 = e2
print(f"The log ideal is generated by {list(ideal_gen1)} and {list(ideal_gen2)}.")

subdivision_vector = ideal_gen1 + ideal_gen2
print(f"The blowup introduces a new vector v = {list(ideal_gen1)} + {list(ideal_gen2)} = {list(subdivision_vector)}.\n")

# Step 3: Define the new cones and calculate their dimensions.
# The original cone is subdivided into two new maximal cones, sigma1 and sigma2.
# The dimension of the blowup is the dimension of these new cones.

# Cone 1
generators1 = np.array([e1, subdivision_vector, e3])
dim1 = np.linalg.matrix_rank(generators1)
print("The first new cone, sigma1, is generated by e1, v, and e3:")
print(generators1)
print(f"The dimension of sigma1 is rank({[list(g) for g in generators1]}) = {dim1}.\n")

# Cone 2
generators2 = np.array([e2, subdivision_vector, e3])
dim2 = np.linalg.matrix_rank(generators2)
print("The second new cone, sigma2, is generated by e2, v, and e3:")
print(generators2)
print(f"The dimension of sigma2 is rank({[list(g) for g in generators2]}) = {dim2}.\n")

# Step 4: Determine the dimension of the log blowup.
# The dimension of the blowup is the maximum dimension of the cones in the new fan.
blowup_dim = max(dim1, dim2)
print("The dimension of the log blowup is the maximum of the dimensions of the new cones.")
print(f"Final Dimension = max({dim1}, {dim2}) = {blowup_dim}")
