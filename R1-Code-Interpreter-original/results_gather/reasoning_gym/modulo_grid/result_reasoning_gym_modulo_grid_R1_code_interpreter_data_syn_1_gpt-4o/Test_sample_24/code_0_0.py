# Define the grid with '?' as a placeholder
grid = [
    ['✅'] * 20,
    ['❌', '✅'] + ['❌'] * 17 + ['✅'],
    ['❌', '✅'] + ['❌'] * 16 + ['✅', '❌', '✅'],
    ['❌', '✅'] + ['❌'] * 6 + ['✅'] + ['❌'] * 6 + ['✅'] + ['❌'] * 2 + ['✅'],
    ['❌', '✅'] + ['❌'] * 16 + ['✅', '❌', '✅'],
    ['❌', '✅'] + ['❌'] * 17 + ['✅'],
    ['❌', '✅'] + ['❌'] * 4 + ['✅', '❌', '✅'] + ['❌'] * 4 + ['✅', '❌', '✅'] + ['❌'] * 2 + ['✅'],
    ['❌', '✅'] + ['❌'] * 17 + ['✅'],
    ['❌', '✅'] + ['❌'] * 16 + ['✅', '❌', '✅'],
    ['❌', '✅'] + ['❌'] * 6 + ['✅'] + ['❌'] * 6 + ['✅'] + ['❌'] * 2 + ['✅'],
    ['❌', '✅'] + ['❌'] * 16 + ['✅', '❌', '✅'],
    ['❌', '✅'] + ['❌'] * 17 + ['✅'],
    ['❌', '✅'] + ['❌'] * 4 + ['✅', '❌', '✅'] + ['❌'] * 4 + ['✅', '❌', '✅'] + ['❌'] * 2 + ['✅'],
    ['❌', '✅'] + ['❌'] * 17 + ['✅'],
    ['❌', '✅'] + ['❌'] * 16 + ['✅', '❌', '✅'],
    ['❌', '✅'] + ['❌'] * 6 + ['✅'] + ['❌'] * 6 + ['✅'] + ['❌'] * 2 + ['✅'],
    ['❌', '✅'] + ['❌'] * 8 + ['❔'] + ['❌'] * 7 + ['✅', '❌', '✅'],
    ['❌', '✅'] + ['❌'] * 17 + ['✅'],
    ['❌', '✅'] + ['❌'] * 4 + ['✅', '❌', '✅'] + ['❌'] * 4 + ['✅', '❌', '✅'] + ['❌'] * 2 + ['✅'],
    ['❌', '✅'] + ['❌'] * 17 + ['✅']
]

# Function to determine the pattern
def determine_pattern(grid):
    for row in range(1, len(grid)):
        for col in range(1, len(grid[row]) - 1):
            if grid[row][col] == '❔':
                # Check the pattern based on previous rows
                if (row % 6 == 0 and col % 6 == 4) or (row % 6 == 2 and col % 6 == 2):
                    grid[row][col] = '✅'
                else:
                    grid[row][col] = '❌'
    return grid

# Fill in the grid
completed_grid = determine_pattern(grid)

# Print the completed grid
for row in completed_grid:
    print(''.join(row))