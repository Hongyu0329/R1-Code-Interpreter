def count_rectangles(grid):
    rows = len(grid)
    cols = len(grid[0]) if rows > 0 else 0
    rectangles = set()

    for r in range(rows):
        for c in range(cols):
            if grid[r][c] in ['#', '█']:
                # Try to find a valid bottom-right corner
                for br_r in range(r + 1, rows):
                    if grid[br_r][c] not in ['#', '█']:
                        break
                    for br_c in range(c + 1, cols):
                        if grid[br_r][br_c] not in ['#', '█']:
                            break
                        # Check if this forms a valid rectangle
                        if all(grid[rr][c] in ['#', '█'] for rr in range(r, br_r + 1)) and \
                           all(grid[r][cc] in ['#', '█'] for cc in range(c, br_c + 1)) and \
                           all(grid[br_r][cc] in ['#', '█'] for cc in range(c, br_c + 1)) and \
                           all(grid[rr][br_c] in ['#', '█'] for rr in range(r, br_r + 1)):
                            rectangles.add((r, c, br_r, br_c))
    
    return len(rectangles)

# Define the grid
grid = [
    "                                          ###############################       ",
    "                                          #                             #       ",
    "                                          #                             #       ",
    "                                          #                             #       ",
    "                                          #                             #       ",
    "                                      ####█###########                  #       ",
    "                                      #   #          #                  #       ",
    "                                      #   #          #                  #       ",
    "                                      #   #          #                  #       ",
    "                                      #   #          #                  #       ",
    "                                      #   #          #                  #       ",
    "                                      #   #          #                  #       ",
    "                                      #   #          #                  #       ",
    "                                      #   #          #                  #       ",
    "                                      #   #          #              ####█###    ",
    "                                      #   #          #              #   #  #    ",
    "                                      #   #          #              #   #  #    ",
    "      ################################█###█##########█##############█###█  #    ",
    "      #                               #   #          #              #   █  #    ",
    "      #                               #   #          #              #   █  #    ",
    "      #                               #   #          #              #   █  #    ",
    "      #                               #   #          #              #   █  #    ",
    "      #                               #   #          #              #   █  #    ",
    "      #                               #   #          #              #   █  #    ",
    "      #                               #   #          #              #   █  #    ",
    "      #                               #   #          #              #   █  #    ",
    "      #                               #   #          #              #   █  #    ",
    "      #                               #   #          #              #   █  #    ",
    "      #                               #   #          #              #   █  #    ",
    "      #                               #   #          #              #   █  #    ",
    "      #                               #   #          #              #   █  #    ",
    "      #                               #   #          #              #   █  #    ",
    "      #                               #   #          #              #   █  #    ",
    "      #                               #   ###########█##############█###█  #    ",
    "      #                               #              #              #   #  #    ",
    "      #                 ##############█##############█#######       #   #  #    ",
    "      #                 #             #              #      #       #   #  #    ",
    "      #                 #             #              #      #       #   #  #    ",
    "      #                 #         ####█##############█######█#      #   #  #    ",
    "      #                 #         #   #              #      ##      #   #  #    ",
    "      #                 #         #   #              #      ##      #   #  #    ",
    "      #                 #         #   #  ############█##### ##      #   #  #    ",
    "      #                 #         #   #  #           #    # ##      #   #  #    ",
    "      #                 #         #   #  #           #    # ##      #   #  #    ",
    "      #                 #         #   #  #           #    # ##      #   #  #    ",
    "      #                 # ####### #   #  #           #    # ##      #   #  #    ",
    "      #                 # #     # #   #  #           #    # ##      ####█###    ",
    "      #                 # #     # ####█##█###########█####█#█#          #       ",
    "      #                 # #     #     ###█############    # #           #       ",
    "      #                 # #     #        #           ###  # #           #       ",
    "      #                 # #     #        #           # #  # #           #       ",
    "      #                 # #     #        #           # #  # #           #       ",
    "      #                 # # ####█########█#######    # #  # #           #       ",
    "      #                 # # #   #        #      #    # #  # #           #       ",
    "      #                 # # #   #        #      #    # #  # #           #       ",
    "      #                 # # #   #        #      #    # #  # #           #       ",
    "      #                 # # #   #        #######█####█#█### #           #       ",
    "      ##################█#█#█###█###############█####███####█############       ",
    "                        # # #   #               #           #                   ",
    "                        # # #   #               #           #                   ",
    "                        # # ####█################           #                   ",
    "                        # #######                           #                   ",
    "                        #                                   #                   ",
    "                        #                                   #                   ",
    "                        #                                   #                   ",
    "                        #                                   #                   ",
    "                        #####################################                   "
]

# Count the rectangles
rectangle_count = count_rectangles(grid)
print(rectangle_count)