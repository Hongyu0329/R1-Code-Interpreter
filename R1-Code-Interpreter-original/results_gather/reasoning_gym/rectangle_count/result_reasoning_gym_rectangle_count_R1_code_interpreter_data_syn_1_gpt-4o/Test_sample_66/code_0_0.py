def count_rectangles(grid):
    rows = len(grid)
    cols = len(grid[0]) if rows > 0 else 0
    rectangles = set()

    for r in range(rows):
        for c in range(cols):
            if grid[r][c] in ['#', '█']:
                # Check for top-left corner of a rectangle
                if (r == 0 or grid[r-1][c] == ' ') and (c == 0 or grid[r][c-1] == ' '):
                    # Find the bottom-right corner
                    br_r, br_c = r, c
                    while br_r < rows and grid[br_r][c] in ['#', '█']:
                        br_r += 1
                    while br_c < cols and grid[r][br_c] in ['#', '█']:
                        br_c += 1
                    # Add the rectangle defined by top-left (r, c) and bottom-right (br_r-1, br_c-1)
                    rectangles.add((r, c, br_r-1, br_c-1))

    return len(rectangles)

# Define the grid
grid = [
    "#################################################                           ",
    "#                                               #                           ",
    "#################################################                           ",
    "                                                                                ",
    "                                                                                ",
    "                                                                                ",
    "                                                                                ",
    "                                                                                ",
    "                                                                                ",
    "                                                                                ",
    "                                                                                ",
    "                                                                                ",
    "                                                                                ",
    "                                                                                ",
    "                                                                                ",
    "                                                                                ",
    "                                                                                ",
    "                                                                                ",
    "                                                                                ",
    "                                                                                ",
    "                                                                                ",
    "                                                                        ####### ",
    "        ################################################################█#    # ",
    "        #                                                               ##    # ",
    "        #                                                               ##    # ",
    "        #                                                               ##    # ",
    "        #                                                               ##    # ",
    "        #                                                               ##    # ",
    "        #                                                               ##    # ",
    "        #                                                               ##    # ",
    "        #                                                               ##    # ",
    "        #                                                               ##    # ",
    "        #                                                               ##    # ",
    "       #█#############################################################  ##    # ",
    "       ##                                                            #  ##    # ",
    "       ##                                        ####################█##██##  # ",
    "       ##                                        #                   #  ## #  # ",
    "       ##                                        #                   #  ## #  # ",
    "       ##                                        #                   #  ## #  # ",
    "       ##                                        #                   #  ## #  # ",
    "       ##                                        #                   #  #█#█### ",
    "       ##                                        #                   #   # #    ",
    "       ##                                        #                   #   █#█    ",
    "       ##                                        #                   #   █ █    ",
    "       ##                                        #                   #   █ █    ",
    "       ##                                        #                   #   █ █    ",
    "       ##                                        #                   #   █ █    ",
    "       ##                                        #                   #   █ █    ",
    "       ##                                        #                   #   █ █    ",
    "       ##########################################█###################█###█ █    ",
    "       #                                         #                   #   # █    ",
    "       #                                         #                   #   # █    ",
    "       #                                         #                   #   # █    ",
    "       #                                         #                   #   # █    ",
    "       #                                         #                   #   # █    ",
    "       #                                         #                   #   # █    ",
    "       #                                         #                   #   # █    ",
    "       #                                         #                   #   # █    ",
    "       #                                         ####################█###█#█    ",
    "       #                                                             #   # #    ",
    "       #                                                             #   # #    ",
    "       #                                                             #   # #    ",
    "       #                                                             #   # #    ",
    "       #                                                             #   # #    ",
    "       #                                                             #   # #    ",
    "       #                                                             #   # #    ",
    "       #                                                             #   # #    ",
    "       #                                                             #   # #    ",
    "       #                                                             #   # #    ",
    "       #                                                             #   # #    ",
    "       ###############################################################   ###    ",
    "                                                                                ",
    "                                                                                ",
    "                                                                                ",
    "                                                                                ",
    "                                                                                ",
    "                                                                                "
]

# Count the rectangles
print(count_rectangles(grid))