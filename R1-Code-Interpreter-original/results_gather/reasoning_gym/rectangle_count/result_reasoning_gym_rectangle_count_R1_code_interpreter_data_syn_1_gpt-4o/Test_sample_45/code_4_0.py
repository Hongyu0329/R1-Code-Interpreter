# Define the grid as a list of strings
grid = [
    " " * 63 + "#####" + " " * 12,
    " " * 63 + "#   #" + " " * 12,
    " " * 63 + "#   #" + " " * 12,
    " " * 63 + "#   #" + " " * 12,
    " " * 63 + "#   #" + " " * 12,
    " " * 63 + "#   #" + " " * 12,
    " " * 41 + "###############" + " " * 7 + "#   #" + " " * 12,
    " " * 41 + "#             #" + " " * 7 + "#   #" + " " * 12,
    " " * 41 + "#             #" + " " * 7 + "#   #" + " " * 12,
    " " * 41 + "#             #" + " " * 7 + "#   #" + " " * 12,
    " " * 41 + "#             #" + " " * 7 + "#   #" + " " * 12,
    " " * 41 + "#             #" + " " * 7 + "#####" + " " * 12,
    " " * 41 + "#             #" + " " * 7 + "## ##" + " " * 12,
    " " * 41 + "#             #" + " " * 7 + "## ##" + " " * 12,
    " " * 41 + "#             #" + " " * 7 + "#####" + " " * 12,
    " " * 41 + "#             #" + " " * 7 + "#   #" + " " * 12,
    " " * 41 + "#             #" + " " * 7 + "#   #" + " " * 12,
    " " * 41 + "#             #" + " " * 7 + "#   #" + " " * 12,
    " " * 41 + "#             #" + " " * 7 + "#   #" + " " * 12,
    " " * 41 + "#             #" + " " * 7 + "#   #" + " " * 12,
    " " * 41 + "###############" + " " * 7 + "#   #" + " " * 12,
    " " * 63 + "#   #" + " " * 12,
    " " * 63 + "#   #" + " " * 12,
    " " * 63 + "#   #" + " " * 12,
    " " * 63 + "#   #" + " " * 12,
    " " * 63 + "#   #" + " " * 12,
    " " * 63 + "#   #" + " " * 12,
    " " * 63 + "#   #" + " " * 12,
    " " * 63 + "#   #" + " " * 12,
    " " * 63 + "#   #" + " " * 12,
    " " * 63 + "#   #" + " " * 12,
    " " * 63 + "#   #" + " " * 12,
    " " * 63 + "#   #" + " " * 12,
    " " * 63 + "#####" + " " * 12,
    " " * 14 + "########################################" + " " * 26,
    " " * 14 + "#                                      #" + " " * 26,
    " " * 14 + "#                                      #" + " " * 26,
    " " * 14 + "#                                      #" + " " * 26,
    " " * 14 + "#                                      #" + " " * 26,
    " " * 14 + "#                                      #" + " " * 26,
    " " * 14 + "#                                      #" + " " * 26,
    " " * 14 + "#                                      #" + " " * 26,
    " " * 14 + "#                                      #" + " " * 26,
    " " * 14 + "#                                      #" + " " * 26,
    " " * 14 + "#                                      #" + " " * 26,
    " " * 14 + "#               ############           #" + " " * 26,
    " " * 14 + "#               #          #           #" + " " * 26,
    " " * 14 + "#               #          #           #" + " " * 26,
    " " * 14 + "#               #          #           #" + " " * 26,
    " " * 14 + "#               #          #           #" + " " * 26,
    " " * 14 + "#               #          #           #" + " " * 26,
    " " * 14 + "#               #          #           #" + " " * 26,
    " " * 14 + "#               ############           #" + " " * 26,
    " " * 14 + "########################################" + " " * 26,
]

# Function to count rectangles
def count_rectangles(grid):
    rectangles = 0
    visited = set()
    
    for r, row in enumerate(grid):
        for c, char in enumerate(row):
            if char == '#' and (r, c) not in visited:
                # Start a new rectangle
                rectangles += 1
                # Find the bottom-right corner of the rectangle
                br_r, br_c = r, c
                while br_r < len(grid) and grid[br_r][c] == '#':
                    br_r += 1
                while br_c < len(row) and grid[r][br_c] == '#':
                    br_c += 1
                # Mark all positions in this rectangle as visited
                for i in range(r, br_r):
                    for j in range(c, br_c):
                        visited.add((i, j))
    
    return rectangles

# Count the rectangles
total_rectangles = count_rectangles(grid)
print(total_rectangles)