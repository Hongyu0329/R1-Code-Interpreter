def count_rectangles(grid):
    rows = len(grid)
    cols = len(grid[0]) if rows > 0 else 0
    visited = [[False] * cols for _ in range(rows)]
    rectangle_count = 0

    def is_rectangle(r, c):
        return grid[r][c] in ('#', '█') and not visited[r][c]

    def mark_rectangle(r, c):
        # Find the bottom-right corner of the rectangle
        max_r, max_c = r, c
        while max_r < rows and grid[max_r][c] in ('#', '█'):
            max_r += 1
        while max_c < cols and grid[r][max_c] in ('#', '█'):
            max_c += 1

        # Mark the rectangle as visited
        for i in range(r, max_r):
            for j in range(c, max_c):
                if grid[i][j] in ('#', '█'):
                    visited[i][j] = True

    for r in range(rows):
        for c in range(cols):
            if is_rectangle(r, c):
                rectangle_count += 1
                mark_rectangle(r, c)

    return rectangle_count

# Define the grid
grid = [
    "                                     #######################                    ",
    "                                     #                     #                    ",
    "                                     #                     #                    ",
    "                                     #                     #                    ",
    "                ##############       #                     #                    ",
    "                #            #       #       ##############█##########          ",
    "                #            #       #       #             #         #          ",
    "                #            #       #       #             #         #          ",
    "################█############█#######█#######█#############█#######  #          ",
    "#               #            #       #       #             #      #  #          ",
    "#               #            #       #       #             #      #  #          ",
    "#               #            #       #       #             #      #  #          ",
    "#               #            #       #       #             #      #  #          ",
    "#               #            #       #       #             #      #  #          ",
    "#               #            #       #       #             #      #  #          ",
    "#               #            #       #       #             #      #  #          ",
    "#               #            #       #       #             #      #  #          ",
    "#               #            #       #       #             #      #  #          ",
    "#               #            #       #       #             #      #  #          ",
    "#               #            #       #       # ############█######█##█####      ",
    "#               #            #       #       # #           #      #  #   #      ",
    "#               #            #       #       # #           #      #  #   #      ",
    "#               #            #       #       # #           #      #  #   #      ",
    "#               #            #       #       # #           #      #  #   #      ",
    "#               #      ######█#######█#######█#█###########█#     #  #   #      ",
    "#               #      #     #       #       # #           ##     #  #   #      ",
    "#               #      #     #       #       # #           ##     #  #   #      ",
    "#               #      #     #       #       # #           ##     #  #   #      ",
    "#               #      #     #       #       # #           ##     #  #   #      ",
    "#               #      #     #       #       # #           ##     #  #   #      ",
    "#               #      #     #       #       # #           ##     #  #   #      ",
    "#               #      #     #       #       # #           ##     #  #   #      ",
    "################█######█#####█#######█#######█#█###########██######  #   #      ",
    "                #      #     #       #       # #           ##        #   #      ",
    "                #      #     #       #       # #           ##        #   #      ",
    "                #      #     #       #       # #           ##        #   #      ",
    "                #      #     #       #       # #           ##        #   #      ",
    "                #      #     #       #       # #           ##        #   #      ",
    "                #      #     #       #       # #           ##        #   #      ",
    "                #      #     #       #       # #           ##        #   #      ",
    "                #      #     #       #       # #           ##        #   #      ",
    "                #      #     #       #       # #           ##        #   #      ",
    "                #      #     #       #       # #           ##        #   #      ",
    "                #      #     #       #       # #           ##        #   #      ",
    "                #      #     #       #       # #           ##        #   #      ",
    "                #      #     #       #       # #           ##        #   #      ",
    "                #      ######█#######█#######█#█###########█#        #   #      ",
    "                #            #       #       # #           #         #   #      ",
    "                █############█#######█#######█#█###########█#####    #   #      ",
    "                █            #       #       # #           #    #    #   #      ",
    "                █            #       #       # #           #    #    #   #      ",
    "                █            #       #       # #           #    #    #   #      ",
    "                █            #       #     ##█##           #    #    #   #      ",
    "                █            #       #     # ###           #    #    #   #      ",
    "                █            #       #     # ###           #    #    #   #      ",
    "                █            #       #     # ###           #    #    #   #      ",
    "                █            #       #     # ###           #    #    #   #      ",
    "                █            #       #     # ###           #    #    #   #      ",
    "                █            #       #     ##███###########█####█#####   #      ",
    "                █############█#######█#########█###########█#####        #      ",
    "                #            #       #         #           #             #      ",
    "                #            #       #         #           #             #      ",
    "                #            #       #         #           #             #      ",
    "                #            #       #         #           #             #      ",
    "                #            #       ##########█############             #      ",
    "                #            #                 #                         #      ",
    "                #            #                 #                         #      ",
    "                #            #                 #                         #      ",
    "                #            #                 #                         #      ",
    "                #            #                 #                         #      ",
    "                #            #                 #                         #      ",
    "                #            #                 ###########################      ",
    "                #            #                                                  ",
    "                #            #                                                  ",
    "                #            #                                                  ",
    "                ##############                                                  ",
]

# Count the rectangles
rectangle_count = count_rectangles(grid)
print(rectangle_count)