from collections import deque, defaultdict

# First, let's create a set of common 4-letter words
words = set('''
    OFFS OFFS OFTS OPTS OATS BATS BETS BEDS BEDS BEES BEEP
    BEAT BELT BENT BENT BEST BETA BETS BIAS BITE BITS BOLD
    BONE BOOK BOOM BOOT BORE BORN BOTH BOUT BOWL BUSY BYTE
    CAFE CAGE CAKE CALL CALM CAME CAMP CARD CARE CASE CASH
    CAST CELL CENT CHAT CHIP CITY CLUB CLUE COAL CODE COLD
    COME COOK COOL COPE COPY CORE COST CREW CROP DARK DATA
    DATE DAWN DAYS DEAD DEAL DEAN DEAR DEBT DECK DEEP DEER
    DESK DIAL DICK DIET DIRT DISC DISH DISK DIVE DOCK DOES
    DONE DOOR DOSE DOWN DRAW DROP DRUG DRUM DUAL DUCK DULL
    DUST DUTY EACH EARN EASE EAST EASY EDGE EDIT EGGS ELSE
    EVEN EVER EVIL EXIT FACE FACT FADE FAIL FAIR FALL FAME
    FARM FAST FATE FEAR FEED FEEL FEET FELL FELT FILE FILL
    FILM FIND FINE FIRE FIRM FISH FIVE FLAG FLAT FLEE FLEW
    FLEX FLIP FLOW FOLK FOOD FOOL FOOT FORD FORM FORT FOUR
    FREE FROM FUEL FULL FUND GAIN GAME GATE GAVE GEAR GENE
    GIFT GIRL GIVE GLAD GOAL GOES GOLD GOLF GONE GOOD GRAB
    GRAY GREW GREY GRID GROW GULF HAIR HALF HALL HAND HANG
    HARD HARM HATE HEAD HEAL HEAP HEAR HEAT HELD HELL HELP
    HERE HERO HIDE HIGH HILL HIRE HOLD HOLE HOLY HOME HOPE
    HOST HOUR HUGE HUNG HUNT HURT IDEA INCH INTO IRON ITEM
    JACK JANE JEAN JOHN JOIN JUMP JURY JUST KEEN KEEP KENT
    KEPT KICK KIND KING KNEE KNEW KNOW LACK LADY LAID LAKE
    LAND LANE LAST LATE LEAD LEAF LEFT LEGS LEND LESS LETS
    LIFE LIFT LIKE LINE LINK LION LIST LIVE LOAD LOAN LOCK
    LOGO LONG LOOK LORD LOSE LOSS LOST LOVE LUCK LUNG MADE
    MAIL MAIN MAKE MALE MALL MANY MARK MASK MASS MATT MEAL
    MEAN MEAT MEET MENU MERE MESS META MIKE MILE MILK MILL
    MIND MINE MISS MODE MODE MORE MOST MOVE MUCH MUST NAIL
    NAME NAVY NEAR NECK NEED NEWS NEXT NICE NICK NODE NONE
    NOSE NOTE NULL NUTS ODDS OFFS OFTS OKAY ONCE ONLY ONTO
    OPEN ORAL OTTO OURS OVAL OVEN OVER PACE PACK PAGE PAID
    PAIN PAIR PALM PARK PART PASS PATH PEAK PICK PILE PINE
    PINK PIPE PLAN PLAY PLOT PLUG PLUS POLL POOL POOR PORT
    POST PULL PURE PUSH PUTS QUIT RACE RAIL RAIN RANK RARE
    RATE READ REAL REAR RELY RENT REST RICE RICH RIDE RING
    RISE RISK ROAD ROCK ROLE ROLL ROOF ROOM ROOT ROSE RULE
    RUSH RUTH SAFE SAID SAKE SALE SALT SAME SAND SAVE SCAN
    SEAL SEAT SEED SEEK SEEM SEEN SELF SELL SEND SENT SETS
    SHIP SHOP SHOT SHOW SHUT SICK SIDE SIGN SITE SIZE SKIN
    SLIP SLOW SNOW SOFT SOIL SOLD SOLE SOME SONG SOON SORT
    SOUL SPOT STAR STAY STEP STOP SUCH SUIT SURE TAKE TALE
    TALK TALL TANK TAPE TASK TEAM TECH TELL TEND TERM TEST
    TEXT THAN THAT THEM THEN THEY THIN THIS TIME TIRE TOLD
    TONE TONY TOOK TOOL TOUR TOWN TREE TRIP TRUE TUBE TURN
    TYPE UNIT UPON USED USER VARY VAST VERY VIEW VOTE WAIT
    WALK WALL WANT WARM WASH WAVE WAYS WEAK WEAR WEEK WELL
    WENT WERE WEST WHAT WHEN WIDE WIFE WILD WILL WIND WINE
    WING WIRE WISE WITH WOOD WORD WORE WORK YARD YEAH YEAR
    YOUR ZERO ZONE
'''.split())

def get_neighbors(word):
    neighbors = []
    for i in range(len(word)):
        for c in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ':
            new_word = word[:i] + c + word[i+1:]
            if new_word in words and new_word != word:
                neighbors.append(new_word)
    return neighbors

def find_path(start, end):
    if start not in words or end not in words:
        return None
    
    queue = deque([[start]])
    visited = {start}
    
    while queue:
        path = queue.popleft()
        word = path[-1]
        
        if word == end:
            return path
        
        for neighbor in get_neighbors(word):
            if neighbor not in visited:
                visited.add(neighbor)
                new_path = list(path)
                new_path.append(neighbor)
                queue.append(new_path)
    
    return None

# Find the path
path = find_path('OFFS', 'BEEP')
if path:
    print(','.join(path))
else:
    print("No path found")