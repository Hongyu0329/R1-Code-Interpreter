from collections import deque, defaultdict

# First, let's create a set of common 4-letter words
words = set('''
    ABLE ABLY ACRE ALLY ALSO AREA ARMY ARTS ARTY AWAY BABY BACK BAIL BAKE BALL
    BAND BANK BARE BARK BARN BASE BATH BEAM BEAN BEAR BEAT BEEF BEEN BEER BELL
    BELT BEND BENT BEST BIKE BILL BIND BIRD BITE BLOW BLUE BOAT BODY BOLD BONE
    BOOK BOOM BOOT BORE BORN BOSS BOTH BOWL BULK BULL BURN BURY BUSY CAKE CALL
    CALM CAME CAMP CARD CARE CART CASE CASH CAST CELL CENT CITY CLUB COAL COAT
    CODE COLD COME COOK COOL COPE COPY CORE CORN COST CREW CROP DARK DATA DATE
    DAWN DAYS DEAD DEAL DEAN DEAR DEBT DECK DEEP DEER DENY DESK DIAL DICK DIET
    DIRT DISH DISK DOES DONE DOOR DOSE DOWN DRAW DREW DROP DRUG DUAL DUKE DUST
    DUTY EACH EARN EASE EAST EASY EDGE ELSE EVEN EVER EVIL EXIT FACE FACT FADE
    FAIL FAIR FALL FAME FARM FAST FATE FEAR FEED FEEL FEET FELL FELT FILE FILL
    FILM FIND FINE FIRE FIRM FISH FIVE FLAG FLAT FLEW FLOW FOLK FOOD FOOT FORD
    FORM FORT FOUR FREE FROM FUEL FULL FUND GAIN GAME GATE GAVE GEAR GENE GIFT
    GIRL GIVE GLAD GOAL GOES GOLD GOLF GONE GOOD GREW GREY GROW GULF HAIR HALF
    HALL HAND HANG HARD HARM HEAD HEAR HEAT HELD HELL HELP HERE HERO HIGH HILL
    HIRE HOLD HOLE HOLY HOME HOPE HORN HOST HOUR HUGE HUNG HUNT HURT IDEA INCH
    INTO IRON ITEM JACK JANE JEAN JOHN JOIN JUMP JURY JUST KEEN KEEP KENT KEPT
    KICK KIND KING KNEE KNEW KNOW LACK LADY LAID LAKE LAND LANE LAST LATE LEAD
    LEFT LESS LIFE LIFT LIKE LINE LINK LION LIST LIVE LOAD LOAN LOCK LOGO LONG
    LOOK LORD LOSE LOSS LOST LOVE LUCK LUNG MADE MAIL MAIN MAKE MALE MANY MARK
    MASS MATT MEAL MEAN MEAT MEET MENU MERE MIKE MILE MILK MILL MIND MINE MISS
    MODE MORE MOST MOVE MUCH MUST NAME NAVY NEAR NECK NEED NEWS NEXT NICE NICK
    NINE NODE NONE NOSE NOTE OKAY ONCE ONLY ONTO OPEN ORAL OVER PACK PAGE PAID
    PAIN PAIR PALM PARK PART PASS PAST PATH PEAK PICK PILE PINE PINK PIPE PLAN
    PLAY PLOT PLUG PLUS POLL POOL POOR PORT POST PULL PURE PUSH RACE RAIL RAIN
    RANK RARE RATE READ REAL REAR RELY RENT REST RICE RICH RIDE RING RISE RISK
    ROAD ROCK ROLE ROLL ROOF ROOM ROOT ROSE RULE RUSH RUTH SAFE SAID SAKE SALE
    SALT SAME SAND SAVE SEAT SEED SEEK SEEM SEEN SELF SELL SEND SENT SHIP SHOP
    SHOT SHOW SHUT SICK SIDE SIGN SITE SIZE SKIN SLIP SLOW SNOW SOFT SOIL SOLD
    SOLE SOME SONG SOON SORT SOUL SPOT STAR STAY STEP STOP SUCH SUIT SURE TAKE
    TALE TALK TALL TANK TAPE TASK TEAM TECH TELL TEND TERM TEST TEXT THAN THAT
    THEM THEN THEY THIN THIS TIME TIRE TONE TONY TOOK TOOL TOUR TOWN TREE TRIP
    TRUE TUNE TURN TWIN TYPE UNIT UPON USED USER VARY VAST VERY VIEW VOTE WAGE
    WAIT WAKE WALK WALL WANT WARD WARM WASH WAVE WAYS WEAK WEAR WEEK WELL WENT
    WERE WEST WHAT WHEN WIDE WIFE WILD WILL WIND WINE WING WIRE WISE WITH WOOD
    WORD WORE WORK YARD YEAH YEAR YOUR ZERO ZONE BOON ARTY
'''.split())

def get_neighbors(word):
    neighbors = []
    for i in range(len(word)):
        for c in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ':
            new_word = word[:i] + c + word[i+1:]
            if new_word in words and new_word != word:
                neighbors.append(new_word)
    return neighbors

def find_path(start, end):
    if start not in words or end not in words:
        return None
    
    queue = deque([[start]])
    visited = {start}
    
    while queue:
        path = queue.popleft()
        word = path[-1]
        
        if word == end:
            return path
            
        for neighbor in get_neighbors(word):
            if neighbor not in visited:
                visited.add(neighbor)
                new_path = list(path)
                new_path.append(neighbor)
                queue.append(new_path)
    
    return None

# Find the path and print the result
path = find_path('BOON', 'ARTY')
if path:
    print(','.join(path))
else:
    print("No path found")