# Define the input grid
input_grid = [
    [8, 8, 8, 0, 8, 8, 4, 8, 8, 8, 9, 8, 2, 8, 8, 5],
    [8, 6, 5, 8, 0, 8, 4, 4, 8, 0, 9, 7, 8, 8, 8, 8],
    [7, 8, 8, 7, 3, 9, 1, 8, 4, 5, 7, 7, 8, 8, 8, 8],
    [0, 1, 8, 8, 8, 8, 8, 0, 8, 8, 8, 7, 4, 9, 3, 8],
    [8, 7, 8, 6, 9, 5, 0, 5, 8, 8, 0, 4, 8, 2, 9, 8],
    [3, 8, 8, 8, 4, 1, 8, 8, 8, 3, 8, 9, 0, 1, 6, 9],
    [2, 8, 2, 8, 8, 8, 8, 8, 0, 8, 8, 8, 8, 8, 0, 8],
    [3, 3, 1, 0, 8, 8, 8, 4, 8, 8, 3, 3, 3, 1, 8, 7],
    [8, 8, 8, 4, 8, 8, 8, 8, 8, 6, 8, 6, 3, 4, 8, 8],
    [2, 1, 8, 3, 2, 8, 8, 8, 8, 8, 8, 2, 8, 5, 3, 8],
    [7, 2, 8, 8, 8, 8, 9, 4, 1, 8, 8, 3, 8, 8, 8, 5],
    [8, 2, 4, 1, 7, 7, 8, 2, 9, 0, 5, 3, 7, 8, 4, 8],
    [8, 8, 3, 8, 5, 8, 9, 8, 1, 3, 8, 4, 8, 2, 8, 0],
    [6, 8, 8, 8, 2, 8, 8, 4, 8, 8, 0, 8, 0, 8, 9, 8],
    [0, 7, 8, 8, 8, 7, 8, 8, 6, 7, 1, 8, 5, 8, 2, 8],
    [1, 9, 1, 5, 9, 8, 8, 8, 1, 7, 8, 4, 8, 8, 9, 8]
]

# Define the transformation rule
def transform(value):
    if value in [0, 4, 5, 6, 7, 9]:
        return value
    else:
        return 1

# Apply the transformation rule to the input grid
output_grid = [[transform(value) for value in row] for row in input_grid]

# Print the output grid
print(output_grid)