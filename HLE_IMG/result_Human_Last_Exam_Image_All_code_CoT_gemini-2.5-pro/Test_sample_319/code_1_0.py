import numpy as np
import matplotlib.pyplot as plt

def demonstrate_auditory_illusion():
    """
    This script generates and visualizes a stimulus for the auditory continuity illusion,
    similar to the one shown in the image.
    """
    # 1. Define parameters for the audio signal
    sample_rate = 44100  # in Hz
    duration = 2.0       # in seconds
    freq_initial = 440   # Hz (A4 note)
    freq_final_1 = 330   # Hz (E4 note)
    freq_final_2 = 660   # Hz (E5 note, an octave higher)
    
    # 2. Generate time vectors for each segment of the audio
    # The sound is split into three parts: initial tone, interruption, final tones
    t_part1 = np.linspace(0, 0.9, int(0.9 * sample_rate), endpoint=False)
    t_interrupt = np.linspace(0.9, 0.95, int(0.05 * sample_rate), endpoint=False)
    t_part2 = np.linspace(0.95, duration, int((duration - 0.95) * sample_rate), endpoint=False)

    # 3. Generate the audio signals for each part
    # Part 1: A single pure sine wave
    signal_part1 = 0.8 * np.sin(2 * np.pi * freq_initial * t_part1)

    # Part 2: The interruption - a short burst of white noise
    interruption_signal = (np.random.randn(len(t_interrupt))) * 0.7

    # Part 3: A combination of two different sine waves
    signal_part2 = 0.4 * np.sin(2 * np.pi * freq_final_1 * t_part2) + \
                   0.4 * np.sin(2 * np.pi * freq_final_2 * t_part2)

    # 4. Concatenate the parts to create the full signal and time vectors
    full_signal = np.concatenate([signal_part1, interruption_signal, signal_part2])
    full_time = np.concatenate([t_part1, t_interrupt, t_part2])

    # 5. Print the name of the phenomenon
    phenomenon_name = "Auditory continuity illusion"
    print(f"The stimulus shown is a demonstration of the: {phenomenon_name}")

    # The code below can be run in a local Python environment with matplotlib
    # to generate a plot similar to the one in the image.
    try:
        fig, (ax1, ax2) = plt.subplots(2, 1, figsize=(12, 6), sharex=True, gridspec_kw={'height_ratios': [1, 2]})
        fig.suptitle('Visualization of the Auditory Continuity Illusion Stimulus', fontsize=16)

        # Plot 1: Spectrogram
        ax1.specgram(full_signal, Fs=sample_rate, NFFT=512, noverlap=256, cmap='Blues')
        ax1.set_title('Spectrogram')
        ax1.set_ylabel('Frequency (Hz)')
        ax1.set_ylim(0, 1000)

        # Plot 2: Waveform
        ax2.plot(full_time, full_signal)
        ax2.set_title('Waveform')
        ax2.set_xlabel('Time (s)')
        ax2.set_ylabel('Amplitude')
        ax2.grid(True, linestyle='--', alpha=0.6)
        
        plt.tight_layout(rect=[0, 0, 1, 0.96])
        # plt.show() # Uncomment to display the plot
        print("\nNOTE: A plot recreating the image stimulus can be generated by this script.")

    except ImportError:
        print("\nNOTE: Matplotlib is not installed. Cannot generate plot.")

# Execute the function
demonstrate_auditory_illusion()