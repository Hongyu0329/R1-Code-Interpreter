import rdkit
from rdkit import Chem
from rdkit.Chem import Draw

def get_product_structures():
    """
    This function determines and returns the structures of products A, B, and C
    based on analysis of the described reaction pathways.

    The structures are represented as SMILES strings.
    - Product A is derived from the Huisgen [3+2] cycloaddition pathway.
    - Product B is derived from the Michael addition pathway.
    - Product C is derived from the Dakin-West-type pathway.
    """

    # Product A: Methyl 6,7-dihydro-5H-pyrrolo[1,2-a]pyrrole-1-carboxylate
    # This is the classic product of a Huisgen cycloaddition between the described
    # mesoionic intermediate and an alkyne, leading to a stable aromatic pyrrole.
    smiles_A = "COC(=O)c1cn2c(c1)CCC2"

    # Product B: Methyl 2-(3-oxo-hexahydro-1H-pyrrolizin-2-ylidene)acetate
    # The Michael addition of the propiolate, followed by an intramolecular
    # cyclization (lactam formation), plausibly forms this bicyclic product.
    smiles_B = "COC(=O)C=C1C(=O)N2CCCC2C1"

    # Product C: 2-acetyl-1-pyrroline
    # The Dakin-West type fragmentation with acetic anhydride is known to produce
    # fragments. The prompt's mention of "acetyl pyrrolidine" strongly suggests
    # this structure as the resulting fragment from the dihydropyrrole portion.
    smiles_C = "CC(=O)C1=NCCC1"
    
    return {
        "Product A": smiles_A,
        "Product B": smiles_B,
        "Product C": smiles_C,
    }

if __name__ == "__main__":
    products = get_product_structures()
    print("Based on the analysis of the reaction pathways, the deduced structures for products A, B, and C are:")
    for product_name, smiles_string in products.items():
        print(f"{product_name}: {smiles_string}")

    # For visualization, we can generate an image file, though the primary output is text.
    mol_A = Chem.MolFromSmiles(products["Product A"])
    mol_B = Chem.MolFromSmiles(products["Product B"])
    mol_C = Chem.MolFromSmiles(products["Product C"])
    
    # Add labels to the molecules
    mol_A.SetProp("_Name", "Product A")
    mol_B.SetProp("_Name", "Product B")
    mol_C.SetProp("_Name", "Product C")
    
    img = Draw.MolsToGridImage([mol_A, mol_B, mol_C], molsPerRow=3, subImgSize=(250, 250), legends=[m.GetProp("_Name") for m in [mol_A, mol_B, mol_C]])
    # The image is not displayed here but generated by the code. 
    # The primary output as per instructions are the printed SMILES strings.
    # img.save("products_A_B_C.png") # This line would save the image if running locally.
